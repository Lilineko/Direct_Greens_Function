(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    419378,       7983]
NotebookOptionsPosition[    416050,       7926]
NotebookOutlinePosition[    416535,       7944]
CellTagsIndexPosition[    416492,       7941]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"StringTake", "[", 
     RowBox[{"$SystemID", ",", "3"}], "]"}], "\[Equal]", "\"\<Win\>\""}], ",",
    "\[IndentingNewLine]", 
   RowBox[{
   "SetDirectory", "[", 
    "\"\<C:\\\\Users\\\\pwrzo\\\\Documents\\\\GitHub\\\\Direct_Greens_\
Function\\\\rotsaw\\\\bin\>\"", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "SetDirectory", "[", 
    "\"\<~/Documents/GitHub/Direct_Greens_Function/rotsaw/bin/\>\"", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.844661939860559*^9, 3.844661967885627*^9}},
 CellLabel->
  "In[1288]:=",ExpressionUUID->"2f91cedf-8e71-4d4e-ba1d-4f5bebc61316"],

Cell[BoxData["\<\"/Users/pwrzosek/Documents/GitHub/Direct_Greens_Function/\
rotsaw/bin\"\>"], "Output",
 CellChangeTimes->{{3.844661969714075*^9, 3.8446619800620747`*^9}, 
   3.8446622343471317`*^9, {3.844662371591382*^9, 3.844662386083187*^9}},
 CellLabel->
  "Out[1288]=",ExpressionUUID->"7cd9fdb0-b59c-4b48-b1c5-ed429878147a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"0.4", "t"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Emin", "=", 
   RowBox[{"-", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Emax", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Epoints", "=", "1401"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"i\[Delta]", "=", 
   RowBox[{"0.05", "I"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.836655976201291*^9, 3.8366559806543913`*^9}, 
   3.8366568192638617`*^9, {3.8366568496452923`*^9, 3.8366568649741845`*^9}, 
   3.836888480444193*^9, 3.836889037020255*^9, {3.8371584186511135`*^9, 
   3.837158435316058*^9}, {3.83778025647653*^9, 3.8377802811364727`*^9}},
 CellLabel->
  "In[1289]:=",ExpressionUUID->"b152ee00-f402-45f9-a1d5-419d908ed7a6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"moves", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<E\>\"", ",", "\"\<N\>\"", ",", "\"\<W\>\"", ",", "\"\<S\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nodeUnits", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "I", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "I"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addMove", "[", 
    RowBox[{"move_", ",", 
     RowBox[{"path_", ":", 
      RowBox[{"{", "}"}]}]}], "]"}], ":=", 
   RowBox[{"Append", "[", 
    RowBox[{"path", ",", "move"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getInvMove", "[", "move_", "]"}], ":=", 
   RowBox[{"moves", "[", 
    RowBox[{"[", 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"moves", ",", "move"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", "4", ",", "1"}], 
      "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refinePath", "[", "path_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"refinedPath", "=", "path"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"it", "=", "1"}], ",", 
       RowBox[{"it", "<", 
        RowBox[{"Length", "[", "refinedPath", "]"}]}], ",", 
       RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"refinedPath", "[", 
            RowBox[{"[", "it", "]"}], "]"}], "\[Equal]", 
           RowBox[{"getInvMove", "[", 
            RowBox[{"refinedPath", "[", 
             RowBox[{"[", 
              RowBox[{"it", "+", "1"}], "]"}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"refinedPath", "[", 
             RowBox[{"[", "it", "]"}], "]"}], "=", 
            RowBox[{"Missing", "[", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"refinedPath", "[", 
             RowBox[{"[", 
              RowBox[{"it", "+", "1"}], "]"}], "]"}], "=", 
            RowBox[{"Missing", "[", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"DeleteMissing", "[", "refinedPath", "]"}], "]"}]}], 
    "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nodeCast", "[", "path_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"refinedPath", "=", 
      RowBox[{"refinePath", "[", "path", "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"nodes", "=", 
      RowBox[{"{", "0", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"nodes", ",", 
         RowBox[{
          RowBox[{"nodes", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "+", 
          RowBox[{"nodeUnits", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"moves", ",", "move"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"move", ",", "refinedPath"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "nodes", "]"}]}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isSelfAvoiding", "[", "path_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nodes", " ", "=", " ", 
      RowBox[{"nodeCast", "[", "path", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"it", "=", 
        RowBox[{"Length", "[", "nodes", "]"}]}], ",", 
       RowBox[{"it", ">", "1"}], ",", 
       RowBox[{"it", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"jt", "=", 
           RowBox[{"it", "-", "1"}]}], ",", 
          RowBox[{"jt", ">", "0"}], ",", 
          RowBox[{"jt", "--"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"nodes", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "\[Equal]", 
             RowBox[{"nodes", "[", 
              RowBox[{"[", "jt", "]"}], "]"}]}], ",", 
            RowBox[{"Return", "[", "False", "]"}]}], "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "True", "]"}], ";"}], "\[IndentingNewLine]", 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSelfAvoidingMoves", "[", "path_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Return", "[", 
      RowBox[{"Pick", "[", 
       RowBox[{"moves", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"isSelfAvoiding", "[", 
           RowBox[{"addMove", "[", 
            RowBox[{"move", ",", "path"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"move", ",", "moves"}], "}"}]}], "]"}]}], "]"}], "]"}], 
     ";"}], "\[IndentingNewLine]", ")"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfaJjcWLl1DeO+3zWZYBolbTZBSCaM6e7EER7WRlU
gmi1MuVeEB3689tkEM0RWbMKRB9J6d8Ios91n9wCopW/Nh4E0a96zS6B6Lkb
btwE0Xrz39wH0Uo71zwD0dc2bf0KopcUJbNXAWkfqXWcIDqvdh0fiG47mqgH
ohXXrjUB0YfebfME0dfYfBJB9FafqGoQXfTxfhOIXnPxUyuI/uXB2Aui3+0S
ANNJPxnngWgOJy4w3bBn8VIQHTX3wyoQfcTp2iYQvXtJx2YQ/TZx7RkQ7b3k
+FmwOSvi7zaB7KvQvweiATFrqW0=
  "],
 CellLabel->
  "In[1295]:=",ExpressionUUID->"e5ca9cf7-0ff3-4a7c-891c-c67e21407c57"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getPhase", "[", 
    RowBox[{"path_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"phase", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "path", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"phase", "*=", 
          RowBox[{
           RowBox[{"nodeUnits", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{"moves", ",", 
                RowBox[{"path", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "^", 
           RowBox[{"m", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
        ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "phase", "]"}], ";"}], "\[IndentingNewLine]", 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getPaths", "[", "order_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"paths", "=", 
      RowBox[{"{", 
       RowBox[{"{", "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "order"}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"oldPaths", "=", "paths"}], ";", "\[IndentingNewLine]", 
         RowBox[{"paths", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"paths", ",", 
                RowBox[{"addMove", "[", 
                 RowBox[{"move", ",", "path"}], "]"}]}], "]"}], 
              "\[IndentingNewLine]", ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"move", ",", "moves"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"path", ",", "oldPaths"}], "}"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "paths", "]"}], ";"}], "\[IndentingNewLine]", 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getGFList", "[", "order_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"paths", "=", 
      RowBox[{"getPaths", "[", "order", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"lPath", ",", "rPath"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"lPath", ",", "paths"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"rPath", ",", "paths"}], "}"}]}], "]"}], "]"}], ";"}], 
    "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getGFPhases", "[", 
    RowBox[{"order_", ",", "m_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"paths", "=", 
      RowBox[{"getPaths", "[", "order", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rPhases", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"getPhase", "[", 
         RowBox[{"path", ",", "m"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"path", ",", "paths"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lPhases", "=", 
      RowBox[{"Conjugate", "[", "rPhases", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"lPhase", " ", "*", " ", "rPhase"}], ",", 
        RowBox[{"{", 
         RowBox[{"lPhase", ",", "lPhases"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"rPhase", ",", "rPhases"}], "}"}]}], "]"}], "]"}], ";"}], 
    "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refineGFPhases", "[", 
    RowBox[{"GFList_", ",", "GFPhases_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"refinedGFPhases", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "GFList", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", 
             RowBox[{"GFList", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", 
           RowBox[{"(", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"GF", "=", 
              RowBox[{"GFList", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"isSelfAvoiding", "[", 
                 RowBox[{"GF", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "&&", 
                RowBox[{"isSelfAvoiding", "[", 
                 RowBox[{"GF", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"(", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"refinedGFPhases", ",", 
                   RowBox[{"GFPhases", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ";"}], 
                "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], 
            "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "refinedGFPhases", "]"}], ";"}], 
    "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refineGFList", "[", "GFList_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"refinedGFList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "GFList", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", 
             RowBox[{"GFList", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", 
           RowBox[{"(", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"GF", "=", 
              RowBox[{"GFList", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"isSelfAvoiding", "[", 
                 RowBox[{"GF", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "&&", 
                RowBox[{"isSelfAvoiding", "[", 
                 RowBox[{"GF", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"(", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"refinedGFList", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"refinePath", "[", 
                    RowBox[{"GF", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
                    RowBox[{"refinePath", "[", 
                    RowBox[{"GF", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                 ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], 
            "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "refinedGFList", "]"}], ";"}], 
    "\[IndentingNewLine]", ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.836471558194786*^9, 3.836471589001182*^9}, {
   3.836471639895585*^9, 3.8364716844242992`*^9}, {3.836471788719098*^9, 
   3.8364719263264446`*^9}, {3.836471981557273*^9, 3.836472024184866*^9}, {
   3.8364720565538855`*^9, 3.8364721722862062`*^9}, {3.8364722169205236`*^9, 
   3.8364722266638465`*^9}, {3.836472273730157*^9, 3.8364723247055254`*^9}, {
   3.8364724648419814`*^9, 3.8364725116659184`*^9}, {3.8364726226439342`*^9, 
   3.836472652858488*^9}, {3.836472698851341*^9, 3.8364727478322763`*^9}, {
   3.8364728457427607`*^9, 3.8364729145205936`*^9}, {3.8364729460019197`*^9, 
   3.8364729581681986`*^9}, {3.836473021809291*^9, 3.836473095501677*^9}, {
   3.836473126918844*^9, 3.836473128610795*^9}, 3.836473171054119*^9, {
   3.8364733116344843`*^9, 3.8364733163654804`*^9}, {3.8364739530605245`*^9, 
   3.8364741952635612`*^9}, {3.8364742295750055`*^9, 3.836474306601483*^9}, {
   3.8364743585662794`*^9, 3.8364743640350075`*^9}, {3.8364744075403037`*^9, 
   3.8364744661400557`*^9}, {3.8364746357096653`*^9, 
   3.8364746384095964`*^9}, {3.8364747011227417`*^9, 3.836474729999131*^9}, {
   3.83647482535117*^9, 3.8364748802295074`*^9}, {3.8364752400662155`*^9, 
   3.8364752687322397`*^9}, {3.83647567240034*^9, 3.836475774642112*^9}, {
   3.836475819803519*^9, 3.8364759149747944`*^9}, {3.8364759577669516`*^9, 
   3.8364759739151263`*^9}, {3.8364760331245728`*^9, 3.836476053139493*^9}, {
   3.83647611615832*^9, 3.8364763159288054`*^9}, {3.836476452721614*^9, 
   3.8364764615991707`*^9}, {3.836476534995414*^9, 3.836476765805318*^9}, {
   3.836476808036665*^9, 3.8364768106589117`*^9}, {3.83647690010229*^9, 
   3.8364769967429733`*^9}, {3.836477484619323*^9, 3.8364774894086328`*^9}, {
   3.836483317142226*^9, 3.8364833174825363`*^9}, {3.8364945584541583`*^9, 
   3.8364945858590374`*^9}, {3.836494619352385*^9, 3.8364946195074015`*^9}, 
   3.836632516389868*^9, 3.8366328742909327`*^9},
 CellLabel->
  "In[1303]:=",ExpressionUUID->"c91e837b-bfae-46d0-b045-28257a161700"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getGFPattern", "[", "GF_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"singleLine", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"doubleLine", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"denominator", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "moves"}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lMax", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"GF", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"rMax", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"GF", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"tMin", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"lMax", ",", "rMax"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"it", "=", "1"}], ",", 
        RowBox[{"it", "\[LessEqual]", "tMin"}], ",", 
        RowBox[{"it", "++"}], ",", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"lMove", "=", 
           RowBox[{"GF", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "it"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rMove", "=", 
           RowBox[{"GF", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "it"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"lMove", "\[Equal]", " ", "rMove"}], ",", 
            RowBox[{"(", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"doubleLine", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"denominator", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"DeleteCases", "[", 
                   RowBox[{
                    RowBox[{"denominator", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}], ",", 
                    "lMove"}], "]"}]}], "}"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", ")"}], ",", 
            RowBox[{"(", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"singleLine", "*=", 
               RowBox[{"t", "^", "2"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"denominator", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"GF", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", 
                    RowBox[{"1", ";;", "it"}]}], "]"}], "]"}], ",", 
                  RowBox[{"DeleteCases", "[", 
                   RowBox[{"moves", ",", 
                    RowBox[{"getInvMove", "[", "rMove", "]"}]}], "]"}]}], 
                 "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], "]"}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"denominator", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"GF", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", 
                 RowBox[{"1", ";;", "it"}]}], "]"}], "]"}], ",", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{"moves", ",", 
                RowBox[{"getInvMove", "[", "lMove", "]"}]}], "]"}]}], "}"}]}],
            "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"id", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tMax", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"lMax", ",", "rMax"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"lMax", "<", "rMax"}], ",", 
        RowBox[{"id", "=", "2"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"it", "=", 
         RowBox[{"tMin", "+", "1"}]}], ",", 
        RowBox[{"it", "\[LessEqual]", "tMax"}], ",", 
        RowBox[{"it", "++"}], ",", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tMove", "=", 
           RowBox[{"GF", "[", 
            RowBox[{"[", 
             RowBox[{"id", ",", "it"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"singleLine", "*=", 
           RowBox[{"-", "t"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"denominator", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"GF", "[", 
               RowBox[{"[", 
                RowBox[{"id", ",", 
                 RowBox[{"1", ";;", "it"}]}], "]"}], "]"}], ",", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{"moves", ",", 
                RowBox[{"getInvMove", "[", "tMove", "]"}]}], "]"}]}], "}"}]}],
            "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"single", "\[Rule]", "singleLine"}], ",", 
         RowBox[{"double", "\[Rule]", "doubleLine"}], ",", 
         RowBox[{"denom", "\[Rule]", "denominator"}]}], "|>"}], "]"}], ";"}], 
     "\[IndentingNewLine]", ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getGFPatternList", "[", "GFList_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"getGFPattern", "[", "GF", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"GF", ",", "GFList"}], "}"}]}], "]"}], "]"}], ";"}], 
     "\[IndentingNewLine]", ")"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"applySymmetry", "[", "SEList_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"symSEList", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"it", "=", "1"}], ",", 
        RowBox[{"it", "\[LessEqual]", 
         RowBox[{"Length", "[", "SEList", "]"}]}], ",", 
        RowBox[{"it", "++"}], ",", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"SE", "=", 
           RowBox[{"SEList", "[", 
            RowBox[{"[", "it", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "SE", "]"}], ">", "0"}], ",", 
            RowBox[{"(", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"move1", "=", 
               RowBox[{"SE", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              
              RowBox[{"p0", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"moves", ",", "move1"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"jt", "=", "1"}], ",", 
                RowBox[{"jt", "\[LessEqual]", 
                 RowBox[{"Length", "[", "SE", "]"}]}], ",", 
                RowBox[{"jt", "++"}], ",", 
                RowBox[{"(", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"SE", "[", 
                   RowBox[{"[", "jt", "]"}], "]"}], "=", 
                  RowBox[{"moves", "[", 
                   RowBox[{"[", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"moves", ",", 
                    RowBox[{"SE", "[", 
                    RowBox[{"[", "jt", "]"}], "]"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "p0"}], ",", 
                    "4", ",", "1"}], "]"}], "]"}], "]"}]}], 
                 "\[IndentingNewLine]", ")"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"doMirror", "=", "False"}], ";", "\[IndentingNewLine]", 
              
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"jt", "=", "1"}], ",", 
                RowBox[{"jt", "\[LessEqual]", 
                 RowBox[{"Length", "[", "SE", "]"}]}], ",", 
                RowBox[{"jt", "++"}], ",", 
                RowBox[{"(", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"SE", "[", 
                    RowBox[{"[", "jt", "]"}], "]"}], "\[NotEqual]", 
                    RowBox[{"moves", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SE", "[", 
                    RowBox[{"[", "jt", "]"}], "]"}], "\[NotEqual]", 
                    RowBox[{"moves", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"doMirror", "=", "True"}]}], "]"}], ";", 
                    RowBox[{"Break", "[", "]"}]}], ")"}]}], "]"}], ";"}], 
                 "\[IndentingNewLine]", ")"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{"doMirror", ",", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"kt", "=", "jt"}], ",", 
                  RowBox[{"kt", "\[LessEqual]", 
                   RowBox[{"Length", "[", "SE", "]"}]}], ",", 
                  RowBox[{"kt", "++"}], ",", 
                  RowBox[{"(", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SE", "[", 
                    RowBox[{"[", "kt", "]"}], "]"}], "\[Equal]", 
                    RowBox[{"moves", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"SE", "[", 
                    RowBox[{"[", "kt", "]"}], "]"}], "=", 
                    RowBox[{"moves", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SE", "[", 
                    RowBox[{"[", "kt", "]"}], "]"}], "\[Equal]", 
                    RowBox[{"moves", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"SE", "[", 
                    RowBox[{"[", "kt", "]"}], "]"}], "=", 
                    RowBox[{"moves", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ";"}], 
                   "\[IndentingNewLine]", ")"}]}], "]"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"symSEList", ",", "SE"}], "]"}], ";"}], 
         "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "symSEList", "]"}], ";"}], "\[IndentingNewLine]",
      ")"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSEList", "[", "GFPatternList_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Return", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"applySymmetry", "[", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"localSEList", "=", 
                RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"Do", "[", 
                RowBox[{
                 RowBox[{"Do", "[", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"localSEList", ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"denominator", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "move"}], "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"move", ",", 
                    RowBox[{"denominator", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"denominator", ",", 
                   RowBox[{"GFPattern", "[", "denom", "]"}]}], "}"}]}], "]"}],
                ";", "\[IndentingNewLine]", "localSEList"}], ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"GFPattern", ",", "GFPatternList"}], "}"}]}], "]"}], 
           ",", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}], ";"}], 
    "\[IndentingNewLine]", ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8365716658527603`*^9, 3.836571734417097*^9}, {
   3.836572096451956*^9, 3.8365721739745183`*^9}, {3.836572206778701*^9, 
   3.836572219822682*^9}, {3.8365722575304327`*^9, 3.836572291305885*^9}, {
   3.8365723237045245`*^9, 3.8365723562753077`*^9}, {3.836572481490136*^9, 
   3.836572605098447*^9}, {3.8365727686577005`*^9, 3.8365728226948323`*^9}, {
   3.8365728655230885`*^9, 3.836572901129328*^9}, {3.8365729321729937`*^9, 
   3.8365730440843887`*^9}, {3.8365732233996983`*^9, 3.836573242759373*^9}, {
   3.836573281502654*^9, 3.836573290078327*^9}, {3.83657336985291*^9, 
   3.8365733725303307`*^9}, {3.836573410631175*^9, 3.836573636977736*^9}, {
   3.83657374780161*^9, 3.8365737798093905`*^9}, 3.8365738613707485`*^9, {
   3.8365738978744936`*^9, 3.836574016959834*^9}, {3.8365740474196386`*^9, 
   3.836574059790687*^9}, {3.836574211257498*^9, 3.8365745547855744`*^9}, {
   3.8365745869691644`*^9, 3.8365746744592137`*^9}, 3.8365748273776054`*^9, {
   3.8365749492574987`*^9, 3.836574957858982*^9}, {3.8365750318745103`*^9, 
   3.836575037671883*^9}, {3.8365750988076844`*^9, 3.8365751792239017`*^9}, {
   3.836578610068718*^9, 3.836578612313899*^9}, {3.8365787895558443`*^9, 
   3.8365788612474766`*^9}, {3.8365789169962397`*^9, 
   3.8365789275452433`*^9}, {3.836578965427436*^9, 3.8365790004194703`*^9}, {
   3.8365790336926117`*^9, 3.8365790595625343`*^9}, {3.8365791937864275`*^9, 
   3.8365793291675854`*^9}, {3.8365794013390245`*^9, 3.836579464316722*^9}, {
   3.8365794997680783`*^9, 3.8365795001408443`*^9}, {3.8365795928474064`*^9, 
   3.8365796171186132`*^9}, {3.8365796755194397`*^9, 
   3.8365797124370704`*^9}, {3.836579754028276*^9, 3.8365798290718393`*^9}, {
   3.8365798617495537`*^9, 3.836580017315674*^9}, {3.8365801428678617`*^9, 
   3.836580207823207*^9}, {3.8365802615926228`*^9, 3.8365802648832836`*^9}, {
   3.836580357055791*^9, 3.836580444250568*^9}, {3.8365804872772427`*^9, 
   3.836580492651731*^9}, {3.8365806414798613`*^9, 3.8365807058305793`*^9}, {
   3.8365807364724064`*^9, 3.8365808458229685`*^9}, {3.8365808872183228`*^9, 
   3.8365809058748326`*^9}, {3.8365810010380545`*^9, 3.836581113062442*^9}, {
   3.8365812193055687`*^9, 3.8365812234260645`*^9}, {3.836581357590127*^9, 
   3.836581425067897*^9}, {3.8365814874777727`*^9, 3.8365815816503525`*^9}, {
   3.836581616190467*^9, 3.8365817175630617`*^9}, {3.836581761747823*^9, 
   3.8365817863946667`*^9}, {3.836581840007979*^9, 3.836581868587613*^9}, {
   3.8365819554784365`*^9, 3.8365819556708145`*^9}, {3.836581985719842*^9, 
   3.836581995613036*^9}, {3.836582037836404*^9, 3.8365820694758286`*^9}, {
   3.836582126774084*^9, 3.836582139246889*^9}, {3.836582919347126*^9, 
   3.8365829496917305`*^9}, {3.836583066780421*^9, 3.8365830982404394`*^9}, {
   3.8365833107257843`*^9, 3.8365833291787996`*^9}, {3.8365833614385076`*^9, 
   3.8365833653846397`*^9}, {3.836584448082823*^9, 3.836584456031289*^9}, {
   3.8366543559917917`*^9, 3.8366543561387205`*^9}, {3.837073009805496*^9, 
   3.8370730244990034`*^9}, {3.837073142681483*^9, 3.837073147822456*^9}, {
   3.83717000568939*^9, 3.8371700089225297`*^9}, {3.8371702237870817`*^9, 
   3.8371702247666163`*^9}},
 CellLabel->
  "In[1309]:=",ExpressionUUID->"9cdbf845-cf42-4e4c-97e4-37c3515e6906"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"makeInputFile", "[", 
     RowBox[{"SEList_", ",", 
      RowBox[{"override_", ":", "False"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "content", ",", "head", ",", "excludedFiles", ",", "fileName", ",", 
        "excludedSE", ",", 
        RowBox[{"localSEList", "=", "SEList"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"head", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{"$SystemID", ",", "3"}], "]"}], "\[Equal]", 
           "\"\<Win\>\""}], ",", "\[IndentingNewLine]", 
          "\"\<output\\\\SE_*\>\"", ",", "\[IndentingNewLine]", 
          "\"\<output/SE_*\>\""}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"content", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", "override", "]"}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"excludedFiles", "=", 
            RowBox[{"FileNames", "[", "head", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"excludedSE", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"fileName", "=", 
                RowBox[{"FileNameTake", "[", "file", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"excludedSE", "=", 
                RowBox[{"StringSplit", "[", 
                 RowBox[{
                  RowBox[{"StringTake", "[", 
                   RowBox[{"fileName", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", 
                    RowBox[{
                    RowBox[{"Length", "[", "fileName", "]"}], "-", "5"}]}], 
                    "}"}]}], "]"}], ",", "\"\<\>\""}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"localSEList", "=", 
                RowBox[{"DeleteCases", "[", 
                 RowBox[{"localSEList", ",", "excludedSE"}], "]"}]}], ";"}], 
              "\[IndentingNewLine]", ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"file", ",", "excludedFiles"}], "}"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"content", "=", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"content", ",", 
            RowBox[{"StringJoin", "[", "SE", "]"}], ",", "\"\<\\n\>\""}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"SE", ",", "localSEList"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{"\"\<input.txt\>\"", ",", "content"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"readSEFiles", "[", "SEList_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"output", ",", "head"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"head", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringTake", "[", 
           RowBox[{"$SystemID", ",", "3"}], "]"}], "\[Equal]", 
          "\"\<Win\>\""}], ",", "\[IndentingNewLine]", 
         "\"\<output\\\\SE_\>\"", ",", "\[IndentingNewLine]", 
         "\"\<output/SE_\>\""}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"output", "=", 
       RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AssociateTo", "[", 
           RowBox[{"output", ",", 
            RowBox[{"SE", "\[Rule]", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Import", "[", 
               RowBox[{
                RowBox[{"StringJoin", "[", 
                 RowBox[{"head", ",", 
                  RowBox[{"StringJoin", "[", "SE", "]"}], ",", 
                  "\"\<.txt\>\""}], "]"}], ",", "\"\<Table\>\""}], "]"}], 
              "]"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"SE", ",", "SEList"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "output", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8365834936828794`*^9, 3.8365835431255627`*^9}, {
   3.8365835906900854`*^9, 3.836583699002569*^9}, {3.8365838644058094`*^9, 
   3.836583902044677*^9}, {3.836629995014777*^9, 3.836630030657771*^9}, {
   3.8366300634305496`*^9, 3.8366301020689697`*^9}, {3.836630147480568*^9, 
   3.83663021691794*^9}, {3.8366302547263775`*^9, 3.836630463930874*^9}, {
   3.836630522773527*^9, 3.8366305275543203`*^9}, {3.8366305641455936`*^9, 
   3.8366306734951444`*^9}, {3.8366307051173086`*^9, 3.836630803401039*^9}, {
   3.8366308492675543`*^9, 3.8366309232060184`*^9}, {3.8366310249220457`*^9, 
   3.8366310274069767`*^9}, {3.8366310855469403`*^9, 3.836631094327055*^9}, {
   3.8366311455086403`*^9, 3.836631273569104*^9}, {3.8366313067856617`*^9, 
   3.836631317083708*^9}, {3.8366313655376005`*^9, 3.8366313947221956`*^9}, 
   3.8366314533653483`*^9, {3.836631484122343*^9, 3.8366314866775827`*^9}, {
   3.836653169380216*^9, 3.836653224396577*^9}, {3.8366532596548014`*^9, 
   3.836653304868101*^9}, {3.8366533472102547`*^9, 3.8366534121064644`*^9}, {
   3.8366534482096252`*^9, 3.8366535039654455`*^9}, {3.8366535965726876`*^9, 
   3.8366535970415173`*^9}, {3.8366536372673874`*^9, 
   3.8366536392158804`*^9}, {3.8366536843606415`*^9, 3.836653684945368*^9}, {
   3.8366538026743407`*^9, 3.836653955891353*^9}, {3.8366539971178627`*^9, 
   3.836654012965369*^9}, {3.8368873252239895`*^9, 3.8368874487016344`*^9}, {
   3.836887606748562*^9, 3.8368876107874317`*^9}, {3.844662066256112*^9, 
   3.844662209354186*^9}},
 CellLabel->
  "In[1313]:=",ExpressionUUID->"d5ab117f-d7c6-42dd-a1eb-aca0ef349fde"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getSEForm", "[", "GFPattern_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"SEForm", ",", "localSEForm"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"single", "\[Rule]", 
         RowBox[{"GFPattern", "[", "single", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"double", "\[Rule]", " ", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SEForm", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"localSEForm", "=", 
                RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"Do", "[", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"localSEForm", ",", 
                   RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"dLine", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "move"}], "]"}]}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"move", ",", 
                   RowBox[{"dLine", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"SEForm", ",", 
                 RowBox[{"applySymmetry", "[", "localSEForm", "]"}]}], "]"}], 
               ";"}], "\[IndentingNewLine]", ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"dLine", ",", 
               RowBox[{"GFPattern", "[", "double", "]"}]}], "}"}]}], "]"}], 
           ";", "\[IndentingNewLine]", "SEForm"}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"denom", "\[Rule]", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SEForm", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"localSEForm", "=", 
                RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"Do", "[", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"localSEForm", ",", 
                   RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"denominator", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "move"}], "]"}]}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"move", ",", 
                   RowBox[{"denominator", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"SEForm", ",", 
                 RowBox[{"applySymmetry", "[", "localSEForm", "]"}]}], "]"}], 
               ";"}], "\[IndentingNewLine]", ")"}], ",", 
             RowBox[{"{", 
              RowBox[{"denominator", ",", 
               RowBox[{"GFPattern", "[", "denom", "]"}]}], "}"}]}], "]"}], 
           ";", "\[IndentingNewLine]", "SEForm"}], ")"}]}]}], 
       "\[IndentingNewLine]", "|>"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getEnergy", "[", "path_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"energy", "=", 
         RowBox[{"2", "J"}]}], ",", "it", ",", 
        RowBox[{"nodes", "=", 
         RowBox[{"nodeCast", "[", "path", "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<", 
          RowBox[{"Length", "[", "nodes", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"energy", "+=", 
            RowBox[{"2", "J"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"nodes", ",", 
                 RowBox[{
                  RowBox[{"nodes", "[", 
                   RowBox[{"[", "it", "]"}], "]"}], "+", "move"}]}], "]"}], 
               ",", 
               RowBox[{"energy", "-=", 
                RowBox[{"J", "/", "2"}]}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"move", ",", "nodeUnits"}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "energy", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getSymmetryFactor", "[", "SEPath_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"factor", "=", "1"}], ",", 
       RowBox[{"is4Fold", "=", "True"}], ",", 
       RowBox[{"isMirror", "=", "False"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"is4Fold", "=", 
       RowBox[{"SEPath", "\[Equal]", 
        RowBox[{"{", "\"\<E\>\"", "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"is4Fold", ",", 
        RowBox[{"factor", "=", "4"}], ",", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"isMirror", "=", 
           RowBox[{
            RowBox[{"AllTrue", "[", 
             RowBox[{
              RowBox[{"SEPath", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", 
                 RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"#", "\[Equal]", "\"\<E\>\""}], "&"}]}], "]"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"SEPath", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}], "\[NotEqual]", 
              "\"\<E\>\""}], ")"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"isMirror", ",", 
            RowBox[{"factor", "=", "2"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "factor", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"calculateGamma", "[", "SEPaths_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "path", ",", "energy", ",", "SEData", ",", "gamma", ",", "it", ",", 
        "\[Omega]Points", ",", "SEValue"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"path", "=", 
        RowBox[{
         RowBox[{"SEPaths", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"-", "2"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"energy", "=", 
        RowBox[{"getEnergy", "[", "path", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Omega]Points", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Emax", "-", "Emin"}], ")"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"it", "-", "1"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"Epoints", "-", "1"}], ")"}]}]}], "+", "Emin"}], ",", 
          RowBox[{"{", 
           RowBox[{"it", ",", "Epoints"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"gamma", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Omega]Points", "[", 
            RowBox[{"[", "it", "]"}], "]"}], "+", "i\[Delta]", "-", 
           "energy"}], ",", 
          RowBox[{"{", 
           RowBox[{"it", ",", "Epoints"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SEData", "=", 
            RowBox[{"SEDataSet", "[", "SEpath", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"it", "=", "1"}], ",", 
             RowBox[{"it", "\[LessEqual]", "Epoints"}], ",", 
             RowBox[{"it", "++"}], ",", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"SEValue", "=", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"StringJoin", "[", 
                  RowBox[{"\"\<{\>\"", ",", 
                   RowBox[{"StringTake", "[", 
                    RowBox[{
                    RowBox[{"SEData", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ";;", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", "\"\<}\>\""}], 
                  "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"gamma", "[", 
                 RowBox[{"[", "it", "]"}], "]"}], "-=", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"SEValue", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                   RowBox[{"I", " ", 
                    RowBox[{"SEValue", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}], "/", 
                 RowBox[{"getSymmetryFactor", "[", "SEpath", "]"}]}]}], ";"}],
               "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"SEpath", ",", "SEPaths"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "gamma", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeGammaSet", "[", "GFPatternList_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"SEForm", ",", "localSEList", ",", "SEPaths", ",", "it", ",", 
       RowBox[{"gammaSet", "=", 
        RowBox[{"<|", "|>"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"SEForm", "=", 
           RowBox[{"getSEForm", "[", "GFPattern", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"(", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"localSEList", "=", 
               RowBox[{"SEForm", "[", "spec", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"it", "=", "1"}], ",", 
                RowBox[{"it", "\[LessEqual]", 
                 RowBox[{"Length", "[", "localSEList", "]"}]}], ",", 
                RowBox[{"it", "++"}], ",", 
                RowBox[{"(", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"SEPaths", "=", 
                   RowBox[{"localSEList", "[", 
                    RowBox[{"[", "it", "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"Not", "[", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"gammaSet", ",", 
                    RowBox[{
                    RowBox[{"GFPattern", "[", "spec", "]"}], "[", 
                    RowBox[{"[", "it", "]"}], "]"}]}], "]"}], "]"}], ",", 
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{"AssociateTo", "[", 
                    RowBox[{"gammaSet", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"GFPattern", "[", "spec", "]"}], "[", 
                    RowBox[{"[", "it", "]"}], "]"}], "\[Rule]", 
                    RowBox[{"calculateGamma", "[", "SEPaths", "]"}]}]}], 
                    "]"}], "\[IndentingNewLine]", ")"}]}], "]"}]}], 
                 "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", ")"}], ",", 
            RowBox[{"{", 
             RowBox[{"spec", ",", 
              RowBox[{"{", 
               RowBox[{"double", ",", "denom"}], "}"}]}], "}"}]}], "]"}], 
          ";"}], "\[IndentingNewLine]", ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"GFPattern", ",", "GFPatternList"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "gammaSet", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.83665804153542*^9, 3.8366580542107224`*^9}, {
   3.8366581503968253`*^9, 3.836658165777007*^9}, {3.836658210278754*^9, 
   3.836658211127308*^9}, {3.836658244817177*^9, 3.8366582949391637`*^9}, {
   3.8366584373577585`*^9, 3.8366584821171994`*^9}, {3.836658558552083*^9, 
   3.836658591757626*^9}, {3.836658625475978*^9, 3.8366588476998816`*^9}, {
   3.836658919717695*^9, 3.8366589282715917`*^9}, {3.8366592516135197`*^9, 
   3.836659276238991*^9}, {3.8366593354118805`*^9, 3.836659379286455*^9}, {
   3.8366595205423374`*^9, 3.836659523844322*^9}, {3.8366595660782237`*^9, 
   3.836659700867437*^9}, {3.836659733361261*^9, 3.836659759625555*^9}, {
   3.836659792075159*^9, 3.8366597931910257`*^9}, {3.836659852453683*^9, 
   3.8366598537705092`*^9}, {3.8366602779516754`*^9, 
   3.8366604570000467`*^9}, {3.836660490444399*^9, 3.8366605003396463`*^9}, 
   3.8366606327356586`*^9, {3.8366706183482137`*^9, 3.836670646863944*^9}, {
   3.8366706813934665`*^9, 3.8366707640462933`*^9}, {3.8366708554331427`*^9, 
   3.8366709580543957`*^9}, 3.836671022885666*^9, {3.8366713040629983`*^9, 
   3.8366713141155353`*^9}, {3.8366715551348467`*^9, 3.836671614039305*^9}, {
   3.8366716633421316`*^9, 3.8366716643972445`*^9}, {3.8366717062459917`*^9, 
   3.8366717806742473`*^9}, {3.8366718604005775`*^9, 3.836671869033492*^9}, {
   3.836672240078141*^9, 3.8366722783919744`*^9}, {3.8366726846962576`*^9, 
   3.8366726899498215`*^9}, {3.836887633707863*^9, 3.8368880400444565`*^9}, {
   3.8368880916768417`*^9, 3.8368881329315023`*^9}, {3.8368882840456343`*^9, 
   3.836888313678546*^9}, {3.8368883632042303`*^9, 3.8368883678771796`*^9}, {
   3.8368935722840414`*^9, 3.8368935941890564`*^9}, {3.836893657274398*^9, 
   3.8368936733541007`*^9}, {3.8368937143969326`*^9, 
   3.8368937487877803`*^9}, {3.8368937817365255`*^9, 3.836893783489195*^9}, {
   3.8370746801928034`*^9, 3.837074682042384*^9}, 3.837074716105402*^9, {
   3.837146367312649*^9, 3.837146382442731*^9}, {3.837146431392627*^9, 
   3.8371464576325235`*^9}, {3.8371469391217976`*^9, 
   3.8371469400221167`*^9}, {3.8371478431275644`*^9, 
   3.8371478436784325`*^9}, {3.837158479341994*^9, 3.8371584866867228`*^9}, {
   3.837158756589946*^9, 3.837158803068025*^9}, {3.837159066195803*^9, 
   3.8371592473856497`*^9}, {3.83715931329714*^9, 3.837159360538995*^9}, {
   3.8371594656611576`*^9, 3.837159506617362*^9}, {3.837159552473301*^9, 
   3.8371596154089165`*^9}, {3.837166898125432*^9, 3.837166946503334*^9}, {
   3.837166982332965*^9, 3.837166999148065*^9}},
 CellLabel->
  "In[1315]:=",ExpressionUUID->"9545e2e3-0663-4e0d-895e-7a375fbc9cc6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"calculateGFCoeff", "[", "GFPattern_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"numerator", "=", "1"}], ",", 
        RowBox[{"denominator", "=", "1"}], ",", "dLine", ",", "it"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ndLines", "=", 
        RowBox[{"Length", "[", 
         RowBox[{"GFPattern", "[", "double", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ndLines", ">", "0"}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"dLine", " ", "=", " ", 
            RowBox[{"gammaSet", "[", 
             RowBox[{
              RowBox[{"GFPattern", "[", "double", "]"}], "[", 
              RowBox[{"[", "ndLines", "]"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"numerator", "*=", "dLine"}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"it", "=", 
              RowBox[{"ndLines", "-", "1"}]}], ",", 
             RowBox[{"it", ">", "0"}], ",", 
             RowBox[{"it", "--"}], ",", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"dLine", "=", 
                RowBox[{"gammaSet", "[", 
                 RowBox[{
                  RowBox[{"GFPattern", "[", "double", "]"}], "[", 
                  RowBox[{"[", "it", "]"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"numerator", "=", 
                RowBox[{"dLine", "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"t", "^", "2"}], "/", "numerator"}], ")"}]}]}], 
               ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"numerator", "*=", 
        RowBox[{"GFPattern", "[", "single", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"denominator", "*=", 
          RowBox[{"gammaSet", "[", "node", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"node", ",", 
           RowBox[{"GFPattern", "[", "denom", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"numerator", "/", "denominator"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getGFCoeffList", "[", "GFPatternList_", "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"GFCoeffList", "=", 
        RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "\[LessEqual]", 
          RowBox[{"Length", "[", "GFPatternList", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"GFCoeffList", ",", 
            RowBox[{"calculateGFCoeff", "[", 
             RowBox[{"GFPatternList", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}], "]"}], 
          "\[IndentingNewLine]", ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "GFCoeffList", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"calculateRotGF", "[", 
     RowBox[{"order_", ",", "GFList_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "RotGF", ",", "RotCoeff", ",", "refPh", ",", "mList", ",", "tempList", 
        ",", "mCases", ",", "it", ",", "jt", ",", "\[Omega]Points"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RotGF", "=", 
        RowBox[{"<|", "|>"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mList", "=", 
        RowBox[{"{", 
         RowBox[{"{", "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mCases", "=", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "\[LessEqual]", "order"}], ",", 
         RowBox[{"it", "++"}], ",", 
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tempList", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"jt", "=", "1"}], ",", 
               RowBox[{"jt", "\[LessEqual]", 
                RowBox[{"Length", "[", "mList", "]"}]}], ",", 
               RowBox[{"jt", "++"}], ",", 
               RowBox[{"(", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"tempList", ",", 
                   RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{"mList", "[", 
                    RowBox[{"[", "jt", "]"}], "]"}], ",", "m"}], "]"}]}], 
                  "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"m", ",", "mCases"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"mList", "=", "tempList"}], ";"}], "\[IndentingNewLine]", 
          ")"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Omega]Points", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Emax", "-", "Emin"}], ")"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"jt", "-", "1"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"Epoints", "-", "1"}], ")"}]}]}], "+", "Emin"}], ",", 
          RowBox[{"{", 
           RowBox[{"jt", ",", "Epoints"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"refPh", "=", 
            RowBox[{"refineGFPhases", "[", 
             RowBox[{"GFList", ",", 
              RowBox[{"getGFPhases", "[", 
               RowBox[{"order", ",", "m"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"RotCoeff", "=", 
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{"refPh", "*", "GFCoeffList"}], "]"}], "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"Length", "[", "refPh", "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AssociateTo", "[", 
            RowBox[{"RotGF", ",", 
             RowBox[{"m", "\[Rule]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Omega]Points", "[", 
                   RowBox[{"[", "it", "]"}], "]"}], ",", 
                  RowBox[{"RotCoeff", "[", 
                   RowBox[{"[", "it", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"it", ",", "Epoints"}], "}"}]}], "]"}]}]}], "]"}], 
           ";"}], "\[IndentingNewLine]", ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "mList"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "RotGF", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getRotSF", "[", "RotGF_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "it", ",", "jt", ",", "RotSF", ",", "localRotGF", ",", 
       "\[Omega]Points"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{"Association", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"localRotGF", "=", 
             RowBox[{
              RowBox[{"Normal", "[", "RotGF", "]"}], "[", 
              RowBox[{"[", "it", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"localRotGF", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"localRotGF", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "jt", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{"Im", "[", 
                    RowBox[{"localRotGF", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "jt", ",", "2"}], "]"}], "]"}], "]"}]}],
                   "/", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"jt", ",", 
                 RowBox[{"Length", "[", 
                  RowBox[{"localRotGF", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], 
              "]"}]}]}], ")"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"it", ",", 
            RowBox[{"Length", "[", "RotGF", "]"}]}], "}"}]}], "]"}], "]"}], 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8366609423007283`*^9, 3.836660945184701*^9}, {
   3.8366612951120443`*^9, 3.836661351379841*^9}, {3.836662014557711*^9, 
   3.836662093946495*^9}, {3.8366621418754063`*^9, 3.8366621741484356`*^9}, {
   3.836662204725728*^9, 3.8366622851872506`*^9}, {3.836662366840923*^9, 
   3.8366624063991003`*^9}, {3.836662454209353*^9, 3.836662578354126*^9}, 
   3.8366626231854935`*^9, {3.836668104365549*^9, 3.836668109001972*^9}, {
   3.836668348226765*^9, 3.8366683537948956`*^9}, {3.8366684333721495`*^9, 
   3.836668433954192*^9}, {3.8366686055193663`*^9, 3.836668613581067*^9}, {
   3.836669057227245*^9, 3.8366690695009003`*^9}, {3.83666913331481*^9, 
   3.836669133607865*^9}, {3.836669708896343*^9, 3.8366697093441563`*^9}, {
   3.8366697519156265`*^9, 3.836669884765016*^9}, {3.836669973898058*^9, 
   3.8366699968460865`*^9}, {3.8366700346269627`*^9, 3.836670038482151*^9}, {
   3.836670078161495*^9, 3.8366701790166407`*^9}, {3.836670212740019*^9, 
   3.8366702866615224`*^9}, {3.8366703906075573`*^9, 
   3.8366705427333665`*^9}, {3.8366705730276613`*^9, 3.836670577290786*^9}, {
   3.8366710092295885`*^9, 3.8366712750366545`*^9}, {3.8366713211457987`*^9, 
   3.8366713838041983`*^9}, {3.8366714394517345`*^9, 
   3.8366714672142296`*^9}, {3.8366716307196236`*^9, 
   3.8366716514506807`*^9}, {3.836671794423495*^9, 3.8366718049902334`*^9}, {
   3.8366718354819703`*^9, 3.836671840894566*^9}, {3.83667208863181*^9, 
   3.8366721314466114`*^9}, {3.836672265657528*^9, 3.836672345510103*^9}, {
   3.8366723757767973`*^9, 3.8366724313400965`*^9}, {3.83667248365693*^9, 
   3.8366725186868687`*^9}, {3.836672692177204*^9, 3.836672693007847*^9}, {
   3.8366727731936693`*^9, 3.836672836083337*^9}, {3.8366728789710183`*^9, 
   3.836672909220592*^9}, 3.83667294172444*^9, {3.836673011178606*^9, 
   3.8366733307218304`*^9}, {3.8366733828032846`*^9, 
   3.8366733842967434`*^9}, {3.836673420031706*^9, 3.836673451455389*^9}, {
   3.836673533668551*^9, 3.8366735761864414`*^9}, {3.836673704267993*^9, 
   3.836673745439254*^9}, {3.8366738122408924`*^9, 3.836673813593338*^9}, {
   3.8366738465163326`*^9, 3.8366738931813784`*^9}, {3.8366739872918177`*^9, 
   3.836674004325162*^9}, 3.8368847035098257`*^9, {3.8368847880255384`*^9, 
   3.8368848438849297`*^9}, {3.8368849156363163`*^9, 3.836885006466977*^9}, {
   3.8368851349662247`*^9, 3.836885181207727*^9}, {3.8368852194195385`*^9, 
   3.8368852378999586`*^9}, {3.83688535828162*^9, 3.8368853633384647`*^9}, {
   3.8368854089298515`*^9, 3.836885410147687*^9}, {3.836885467603547*^9, 
   3.836885553505537*^9}, 3.8368857336776304`*^9, {3.836885833301571*^9, 
   3.8368859184730377`*^9}, {3.8368860600451097`*^9, 
   3.8368860684715867`*^9}, {3.836886116078162*^9, 3.836886290918829*^9}, {
   3.836886342503851*^9, 3.8368863598505325`*^9}, {3.836886391994982*^9, 
   3.8368864296992893`*^9}, {3.836886476549816*^9, 3.8368864770189543`*^9}, {
   3.8368865359119735`*^9, 3.836886554780962*^9}, {3.8370734434441795`*^9, 
   3.8370734537842145`*^9}, {3.8371465327926884`*^9, 
   3.8371465360324693`*^9}, {3.837146582072249*^9, 3.837146585172465*^9}, {
   3.8371466640922494`*^9, 3.837146673482255*^9}, {3.8371467076225624`*^9, 
   3.8371467828620625`*^9}, {3.8371468138218684`*^9, 
   3.8371468517069683`*^9}, {3.8371471832318134`*^9, 3.837147244221761*^9}, {
   3.8371472989515905`*^9, 3.837147305531376*^9}, {3.837147361121292*^9, 
   3.8371474310713286`*^9}, {3.8371479944976654`*^9, 3.837148057877709*^9}, {
   3.83714813934741*^9, 3.83714820980756*^9}, {3.8371482577374306`*^9, 
   3.837148316277414*^9}, {3.837148591366988*^9, 3.837148591688053*^9}, {
   3.8371486239368863`*^9, 3.837148624216911*^9}, {3.837148661679495*^9, 
   3.837148663676828*^9}},
 CellLabel->
  "In[1320]:=",ExpressionUUID->"f1118280-2a18-4951-8cc2-5ad89f91079d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"order", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GFList", "=", 
   RowBox[{"getGFList", "[", "order", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refGFList", "=", 
   RowBox[{"refineGFList", "[", "GFList", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GFPatternList", "=", 
   RowBox[{"getGFPatternList", "[", "refGFList", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SEList", "=", 
  RowBox[{"getSEList", "[", 
   RowBox[{"getGFPatternList", "[", "refGFList", "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"makeInputFile", "[", 
  RowBox[{"SEList", ",", "True"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8365835634205556`*^9, 3.836583581395883*^9}, {
   3.836583714460764*^9, 3.8365837213498664`*^9}, {3.836631004110509*^9, 
   3.8366310047953415`*^9}, {3.8366310995311327`*^9, 
   3.8366311312244334`*^9}, {3.836631268739746*^9, 3.836631269540064*^9}, {
   3.8366314064550266`*^9, 3.8366314070867777`*^9}, {3.8366315828481426`*^9, 
   3.8366316537552423`*^9}, {3.8366316846813927`*^9, 3.836631685445181*^9}, {
   3.8366317533144045`*^9, 3.8366317927007737`*^9}, {3.83663183331942*^9, 
   3.8366318488918843`*^9}, {3.836631881703122*^9, 3.836631943218168*^9}, {
   3.8366319734041896`*^9, 3.836631979408716*^9}, {3.836632052491418*^9, 
   3.836632092322669*^9}, {3.8366321628325415`*^9, 3.8366321985864334`*^9}, {
   3.8366322411913404`*^9, 3.836632242176444*^9}, {3.836632410867999*^9, 
   3.8366324114538813`*^9}, {3.8366383980175943`*^9, 3.836638405136134*^9}, {
   3.8366384389276905`*^9, 3.836638464453746*^9}, {3.8366528516832943`*^9, 
   3.8366528533854275`*^9}, 3.8366529926212587`*^9, 3.836660000611539*^9, 
   3.836884616176215*^9, {3.8368852696087728`*^9, 3.836885275694004*^9}, 
   3.8368885993615885`*^9, 3.836888651387037*^9, 3.836889059163774*^9, 
   3.836889089645821*^9, 3.8368935595179358`*^9, 3.837072883690192*^9, 
   3.8370732309217777`*^9, 3.8371585860381184`*^9, {3.8371597654394455`*^9, 
   3.8371597959541664`*^9}, 3.837167017437873*^9, 3.837777865469535*^9, 
   3.837777990479682*^9, {3.8446623699949417`*^9, 3.8446623851401978`*^9}},
 CellLabel->
  "In[1324]:=",ExpressionUUID->"a6d19c87-6c0f-4a37-9163-a18fd37824cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"E\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"E\"\>", ",", "\<\"E\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.836631656971525*^9, 3.836631694928387*^9, {3.836631758320483*^9, 
   3.836631793254245*^9}, {3.836631838341612*^9, 3.836631851736907*^9}, {
   3.8366318911837554`*^9, 3.836631945287307*^9}, 3.8366319815185776`*^9, {
   3.83663223086497*^9, 3.836632246998032*^9}, 3.836632385883598*^9, {
   3.836632416599841*^9, 3.836632441272134*^9}, {3.8366325359696054`*^9, 
   3.836632540167156*^9}, {3.836638399290346*^9, 3.836638406548506*^9}, {
   3.8366384396383963`*^9, 3.8366384651916385`*^9}, 3.836649195488059*^9, 
   3.836652854085964*^9, 3.83665299528172*^9, {3.8366600016594048`*^9, 
   3.836660021922467*^9}, 3.8366600749723716`*^9, 3.836884617462927*^9, 
   3.836885244016369*^9, 3.8368852810826883`*^9, 3.8368880493862514`*^9, 
   3.836888498000017*^9, 3.8368886007249217`*^9, 3.8368886523725033`*^9, {
   3.8368890400104947`*^9, 3.8368890904459276`*^9}, 3.8368935602657185`*^9, 
   3.8370720655703263`*^9, 3.8370728844442267`*^9, 3.837073231622099*^9, 
   3.837073459891895*^9, 3.837146890723719*^9, 3.837147004672744*^9, 
   3.837148488680971*^9, 3.8371585016951556`*^9, 3.8371585868768034`*^9, 
   3.8371597192308135`*^9, {3.837159769193041*^9, 3.837159796759426*^9}, 
   3.837167018347731*^9, 3.8371684352610507`*^9, 3.8371700287598057`*^9, 
   3.8371702332434855`*^9, {3.8377778475092974`*^9, 3.837777866499445*^9}, 
   3.8377779914593844`*^9, {3.837780258666602*^9, 3.8377802837811375`*^9}, 
   3.8446619802751837`*^9, 3.844662234511606*^9, {3.844662371714872*^9, 
   3.8446623861972647`*^9}},
 CellLabel->
  "Out[1328]=",ExpressionUUID->"53aec485-dfcc-41b5-a2a8-32d00b9139a0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"RunProcess", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\</main.exe\>\"", ",", "\"\<14\>\""}], "}"}], ",", 
     "\"\<ExitCode\>\""}], "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SEDataSet", "=", 
    RowBox[{"readSEFiles", "[", "SEList", "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{
  3.8366328587229257`*^9, {3.8366550855857363`*^9, 3.8366550859390507`*^9}, {
   3.8366567486059833`*^9, 3.8366567508234243`*^9}, {3.8366578581226425`*^9, 
   3.83665786661023*^9}, {3.836660065226511*^9, 3.8366600845478*^9}, {
   3.836884620597495*^9, 3.8368846327454944`*^9}, {3.8368884123683643`*^9, 
   3.836888414985654*^9}, 3.836888677770948*^9, {3.83688891480875*^9, 
   3.8368889182812543`*^9}, 3.8371468956318884`*^9, {3.837158561875801*^9, 
   3.837158574250828*^9}, 3.8371670548231387`*^9, {3.8377779961492786`*^9, 
   3.8377780151704426`*^9}},
 CellLabel->
  "In[1330]:=",ExpressionUUID->"05ca4db3-45b8-4d9a-92d7-a4f7eef4d58e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gammaSet", "=", 
   RowBox[{"makeGammaSet", "[", "GFPatternList", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GFCoeffList", "=", 
   RowBox[{"getGFCoeffList", "[", "GFPatternList", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RotGF", "=", 
   RowBox[{"calculateRotGF", "[", 
    RowBox[{"order", ",", "GFList"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rotSF", "=", 
   RowBox[{"getRotSF", "[", "RotGF", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8366597681847115`*^9, 3.8366597752379856`*^9}, {
   3.83665990314633*^9, 3.8366599071724606`*^9}, 3.8366605282026978`*^9, 
   3.8366606533466096`*^9, {3.836889079416136*^9, 3.8368890826825542`*^9}},
 CellLabel->
  "In[1331]:=",ExpressionUUID->"0c3a5360-cd47-41d9-a48f-a0f309af2590"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"rotSF", "[", "key", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"key", ",", 
       RowBox[{"Keys", "[", "rotSF", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Emin", ",", "Emax"}], "}"}], ",", "Full"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.836886578498205*^9, 3.836886661902895*^9}, 
   3.8368867954239073`*^9, {3.8368881686383905`*^9, 3.836888171371039*^9}, {
   3.836888384170431*^9, 3.8368883913504634`*^9}, {3.8368886146092987`*^9, 
   3.8368886442219925`*^9}, {3.836888752301837*^9, 3.8368888184918547`*^9}, 
   3.837073326377844*^9, {3.8370733632120113`*^9, 3.837073368859461*^9}, {
   3.837073488892082*^9, 3.837073529703314*^9}, {3.837073564665728*^9, 
   3.8370736299400516`*^9}, {3.8370780445616965`*^9, 
   3.8370780447463303`*^9}, {3.837147777350476*^9, 3.8371477947778845`*^9}, {
   3.8371481139074125`*^9, 3.837148118577549*^9}, {3.8371482402471695`*^9, 
   3.8371482760774603`*^9}, {3.837148605207095*^9, 3.837148607097025*^9}, {
   3.837150480214554*^9, 3.837150482134742*^9}, {3.8371586338193626`*^9, 
   3.8371586651718693`*^9}, {3.837159829332183*^9, 3.8371599398426595`*^9}, {
   3.8371670666475616`*^9, 3.837167177945465*^9}, 3.837170309837999*^9, {
   3.837170498645369*^9, 3.8371704992772026`*^9}, {3.837777941199115*^9, 
   3.8377779600792203`*^9}},
 CellLabel->
  "In[1335]:=",ExpressionUUID->"ac6a61f3-1f30-47ec-bc5f-a50bb6454c89"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
dqaFHvN/0qF+7g==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJw93Hc8V//7P3B77701aO9khM5lr2SE9iDttJdKiwoNKZWGjIbVILPQeZop
aSoNysgoKjJa6Of9+V3X1z/duuF4nef9jOe6HkP9NnguFxIQEAgUFRD479//
/6XB9v2QutIQasz1jloYUdSjzrqCJ+jPvGjMtXvk6h1qU2d7/LvDKm8ac/W7
VG451Kuzh16c8EpmzFVf2WgpVa3ODjVnC2m8NOYqH//3pc6+TZNdXt9kzBX3
/HdAdXbk8y6+6Jcx99/RPHLVWafWW6ECaRNu8GCDR1Rni/abT3imZ8Jd/e9w
V9TZkDytor+TTbgL5//7UmcXno/KBTsTbvDDDR5QnamlP9t1ea4J99/R9A6p
s2eNrn9V15lwu//7eLvUmfv41KTr+0y4Tf8dbqM6y9+c7OFx2oRb8b8vdfbP
+8xL1UQTbuH/DqjOwo2nZ3bfM+E8//cB1dmcnsURX5+YcI7/O2F1dmz9xG8C
jSbc/w5nqc7m2lWdn/jThJv6vy91dsOhyGantCk3+n8HVGefBp6vrdE35fT/
9wHVmWhHe8UCI1Pufx9PRZ213pu8t9fRlPvf4aQG//7cHR03Fply/99DnVm9
Mhi6b7Mpeqixew7CeQFHTNFDjRm41t7eeckUPdRYybVhdrHppuihxrbxEY6N
ZaboocZsrx5eZFtjih5qrDcwMaew0xQ91Fi+x/a2heJm6KHGri4cd1lV1ww9
1Jh/7iSv9ilm6KHGJj333VHnaIYeaqw9Z+zVrsVm6KHGils71xhsM0MPNWa9
p8ti61Ez9FBjP86JdzTEm6GHGis6WT1xU64ZeqixEyOfj9J7aoYeaszV+N6P
L01m6KHG6s5OzaruM0MPNeb06lHOJ+Xp6KHGtt471K04djp6DJ7vQF7gEuvp
6KHGTDv1V1bOm44eamz52K7fCzdNRw81tm57xXXZsOnoocZS59i+rYubjh6q
bMmr47+qcqejhypTHa6wu+3ZdPRQZXdkJR0MPk9HD1VWdKAhbZ+gOXqoshmH
u90GNM3RQ5Vpj4g6GDvFHD1U2a1Qq13+LuboocpWdqb6uvqbo4cq85tgaT4/
yBw9VJnVsein4WfN0UOVLaq1avl42xw9VFn2yRXN8x+ao8fg553TW/enwRw9
VNlA0qJprM8cPVRZAUwrTlGzQA9VFi3fsDNvkgV6qDKfSUntP5wt0EOV6Swz
O+G+3AI9Bo/n9efkq30W6KHKyqXnfztwwQI9VNm4+uqz3lkW6KHKpkZmpXg8
s0APVXZR9OTnbW0W6KHKYqao1RSKWaKHKjMrODnRdJgleqgwu/EiLa8tLdFD
hTX08F2X51mihwrrulN/LXKbJXqosCVTHe1vRVqix+DPb64167lpiR4qzDSs
P2TlI0v0UGH+FvWeoi2W6KHCZBSURz4VnoEeKmx8abdoyZAZ6KHCSqb73my2
nIEeKuzlN49aowUz0EOFBUYkBaXtnIEeKuxjx9qqeWdnoIcKc64+OXRy5gz0
UGFPo7T+Gb+YgR4qrLVZd+vajhnoocLWl2zzeyLHoYcKi/LQveA3nkMPFaYj
Z9dhMJNDDxW2VvPvRI21HHqosIXJSSkW4Rx6qLA1JmJekckceqgwhZS8YI2H
HHqosEk/vYWet3LoocLifHvWLBYB9FBmCw2/LwxQAfRQZmqypVPPGgB6KLNr
rVWSb40APZSZecLepGl2gB7KLNCkvP+GN6CHMpv+xfDtjBWAHsqsYpHw7bbt
gB7K7EWG8u6MI4AeyqzO/ID22WhAD2UmuH1NR1QyoIcyM/XYL3P7HqCHMlPf
t39VUwWgh/Lg8yNvomktoIcy6/onszLxG6CHMsvhQhymClihhzKrzYq3rFG0
Qg9lNtZrZGXCcCv0UGa7s5ueHJ5mhR7KzN5ibVuogxV6KLOIcxE6yfOs0EOZ
Gfcl6LSstUIPZTZ6XsZO271W6KHMlKo+HWEnrdBDmdnlOCsvvGKFHspsZNQu
GfVsK/RQYjd+Kd/pLLdCDyVmpyf2pP29FXooDb7/nlwV/26FHkpM/KewsK2Q
NXoosbzU7VviVa3RQ4lZthZ06I+2Ro/Bn//03ZJZWKOHErvzz3XsQXdr9FBi
RoUrGlf4W6OHEksa6Wyyfqc1eiix+z8tV0Yfs0YPJfZj5UG55jhr9FBib3qd
nOZkWaOHEusKmj2//aE1eiixrxMnjb3+wRo9lNifwln6IV3W6KHElpQvTjwi
YYMeSuzVgpj9abo26KHE7r7Pm/hvig16KDHv4luztzjaoIcSO3ryXY/cYhv0
GGxPl3Faz7fYoIcSc5Lp8rsXZoMeSqys8+7pilgb9FBiog7v60SybdBDkZ3L
rmpZ8dgGPRRZXJXCsM4GG/RQZOKqwe7XftughyKLui//6qCCLXoosktOSeJH
R9qihyKr3tLTlz/DFj0UWRtrmqLlY4seiux1zpG5VwJs0UORtfiIyc49ZIse
iiy/ZvI2sxhb9FBkz5MaRR2ybNFDkS3JWOF7sNIWPRRZwJmQ9i9NtuihyK4z
x/4DA7boocj2bLgd7aBuhx6KbErF+E6LSXboociOq18f7etkhx6K7PEv37ws
Pzv0UGST8o7tN99jhx6KzF497FnnGTv0UGRiy0Ml3t22Qw9F5vfl4fnuh3bo
ocisR2/eaPXJDj3+a6+j+UUDduihyGzKh6zYoWmPHgqs+cu210uM7NFDgcm3
X+kOcrNHDwUWtfpE3fM19uihwHSCktQXHLZHDwV27AEXqJ1gjx4K7N2i71lK
9+3RQ4EN7Eu2tnlnjx4KrCHZaHFqrz16KLDxDtdez1R2QA8FJphZd2vkJAf0
UGBGOl9/W7o6oIcCWyjwMvHEGgf0UGA7QjJ3aIc6oIcCC7jm9vPTNQf0UGBi
R99Mayt2QA8Fprph45qJDQ7oocBsowv87wg4oocCm6lXsH6rviN6DP69xvtJ
22c4oocCs58k9Dh3kSN6KLCSj93nLYMc0UOB3ZC4qC4S44geCuxOsPo42QJH
9Bhsn6Z5qgtqHdFDgU3+Fr6tvd8R21+epR8ILirWc8L2lmc3z/FcPeeE7SvP
qsU3f7PzdcL2lGeLrtzr6zzohO0nz64bDJ/actUJ20ueycOLpYYPnLB95FmK
fG7arc9O2B7ybGqV6ZFgGWc8f3n2uy1ixpWJzni+8uyMXKiu0mxnPD95FjHu
8anK7c54PoO/3yVx980FZ7ye5FhBVN9LI94Zrx85NtL9slVdozNeL3LsrKN/
7EcJF7w+5NgkQZXAyRNc8HqQY/9mprq/nu2C/nLsYNf1U88DXdBbjhmYrbIc
FueCvnIsBS4rPSpzQU85tkL/uNOjry7oJ8c+GliMGq46E73k2CXVl3FvLGai
jxxr3vHa4rP/TPSQYzXjDoT7HJ+JHrLsrWZn3LDsmeghy+ri3xS7fpyJHrLs
elT4qzcSrughy4b0Ksg8mOKKHrJMsCHlp/oiV/SQZdfuC2dUHnFFD1kWOlt0
RusdV/SQZUESoX5rPriix+DxTjmd8pKahR6y7Mpb/lOS8Sz0kGVbjwfNX7Ns
FnrIsoh6kb1nT85CDxn2d9jUOZPvz0IPGfbj8Fg38/ZZ6CHDCl/4B+VouaGH
DDvTtm7pdSc39JBhUUKj7koEuqGHDFN/qzKjIckNPWRY6t09mlPeuqGHDLMY
+kpmQMQdPWTYgppzOXG67ughwx5ZSfH7jd3RQ4YtXqDSH+fmjh4yzMb7/DOB
1e7oIcMmdJ65En/QHT2kWXbfB8lDl9zRQ5pVfZ82LCXbHT2kmb3XKBuV5+7o
Ic3uFNZFFrW5o4c02+wp2Zwt5oEe0mye4JDTnUM90EOabUy1n77V0gM9pJlL
llo4zPNAD2lmNGkg0GebB3pIs38tn19nR3qghzQrfdG8ctktD/SQZg8akq8v
qvBADymWFHVmTGKrB3pIsdOHWp04MU/0kGLnR0ZfHWXgiR5S7B9LT19m7Yke
gz//O7Dgx1JP9JBi8cnt/17t80QPKdbjuyNLPtYTPaRYsYeeUtx9T/SQYhGb
p2aHffBEDykmfE834PGAJ3pIsY2lslPX6s9GDyl2WEU7eAXMRg8pNvJWYQXv
Oxs9JBnf0/F5Z/Bs9JBk13SnB529Nhs9JJl50T4llfLZ6CHJdGNjt/V8mY0e
kmxD0OzrnJwXekiyU97Nwd8me6GHJButaz5fyscLPSTZ3CNj90Xs8kIPSRa/
YWr9gVgv9JBkV6fl5DSUeKGHJINijwt3vnihhySz+3Zx008Fb/SQYO1vf/il
mXijhwQ7csH6SP1ib/SQYPO3znQ+ctgbPSTYn97ogBu3vNFDggXLD1N0rvZG
Dwm2o9389UoBH/SQYMcvqGpIjvFBDwlm1GLkNM7LBz0kmM74FrkXe33QQ4K1
vLIoEkzxQQ8JZp8zo77glQ96SLBrmW9KhYXmoIcE65h3Wu79hDnoIc7GvlbQ
t1s4Bz3E2ZLmUVFW4XPQQ5wNzVi4/23uHPQQZ2sPNFwSb52DHuLseqOV/TP1
ueghzvY+2dpi6TgXPcTZhiHmDrMC56KHOPO1VvonkDoXPcSZSdotqaW1c9FD
nC3dvjBurcI89BBn7aPTlg63nYce4iyfpdhH7pyHHmLs09LWK5k356GHGLv/
ruF9ZOM89BBjIxbEKo3Rmo8eYuzOilUlhz3mo4cYu/JLdHtS2Hz0EGMHZ7Ud
jyqajx5i7J+/xDGHvvnoIcb2T7ix4aXxAvQQY4e3VreO3bwAPcRYgJH92RW3
FqCHGIvTXpG8p20Beoix8rCIvG2jF6KHGHv0/YPm7FUL0UOUJc7N6NRJWoge
omyjxLuet60L0UOUWdZkNR4bswg9RJl80D01i4BF6CHKVgx7UtmWtgg9RNm2
j1kj43sWoYcoO9fvHupnvhg9RNnBM+sMjQ4uRg9RVuVcED700WL0EGX37pT/
HKu8BD1EWaus4dB5i5aghyj7+P7yr/SkJeghwk75q0+w6FmCHiLM/F5Tx96h
S9FDhAncfyYi5LQUPUSY837LJYablqKHCOO3HpjafX4peogwyXvZH9YUL0UP
EXYi0S7j5Nel6CHCHlS6i6/R8EUPEXYjN4D/beOLHiIscdpgF2KjL3qIsJh1
Tsu9Y3zRQ4T13dlcMaLCFz1E2OnJvU+Kf/uihzArHhOUNWm0H3oIs6MJkdob
5vmhhzAbNaDz9Ei4H3oIs59CY4X25fuhhzBLmaj2e/53P/QQZvH/Nj3QH74M
PYTZqmjXghdzlqGHMFv7Ouv6gePL0EOYxZquXjO6ZBl6CDOVFdsFXv9dhh7C
7MjOU8/CjfzRQ5g9WnWv2X29P3oIsTqfCTFGyf7oIcRW2d66O6XJHz2EmGhD
yes5w5ajhxBzaB5Yk750OXoIMZ+52zPt4pajhxCz+pMzT6N+OXoIseCffwOM
hq9ADyE2JCiXv7ZiBXoIsS8i6x9tSV2BHkJM9oH5kaTOFeghxARl3YTczVai
hxBboxkStOngSvQQYgdbXUp1KleihyB71Pr46jzNVeghyNq2TftouXIVegiy
NYJqC4uzV6GHIONi7sXJSaxGD0HmX9mZorVgNXoMHi9KV+TP7dXoIcgMJCum
5IutQQ9BJqKUHLl9yRr0EGThsnne4+6tQQ9BNr5C+qqA+lr0EGRDQw4ZfN+2
Fj0EWc6sokSD6rXoIcAmLKpyjpi+Dj0E2PGki1OXx61DDwF2uer0nCSJAPQQ
YBfGjd6za0sAegz+/MC3TzV1AeghwM5cO5gw4L4ePQTYDsG+vpbi9eghwEoL
3unlmG1ADwHWt2iX26E7G9BDgI2sEtg9VX0jegiwsDGWGg99NqKHALN6N/OJ
RPRG9BBgZib9xmLvN2L7/+NPZ+wWLtPfhO39jxe7VeG4ecUmbN9//J7Ah4Yi
tzdhe/7jpRpTh1/+vQnb7x/v/+tDrbv9Zmyvf3xniMuCsWc2Y/sM8CeKnTIc
mzdjewzwqg7lH8vMtuD5D/APk8pOZUdswfMd4GfB35/TW7fg+Q3wAh7fatxs
tuL5DPCfrg73s4zfitdTP3+5go9VFdqG108/v/N4wpW3y7fh9dLPy2zfOaz6
8Ta8Pvr5ZaEyDcNNtuP10M8fioma8/LqdvTv5yVrjN1Gqu1A7z4+8tABW92j
O9C3j3880kxUS2QnevbxhQodKhMO7ES/Pn5d3tmwe0KB6NXHV8cZb4wLDUSf
Pn7gRJ65qfIu9Ojj604WuH5O2IUef/mipJop90x2o8dfvnHWmbPzX+xGj7+8
ln1o5c7Ne9DjLz/9fvPYKo0g9PjLn5x+0tGxNAg9/vJPd7+rzti5Fz3+8PP7
DL1OTd2HHn94V5FHv9N79qHHH96pLmNV1pL96PGH9xyy8ueb8v3o8YfvFbFa
ec/4AHr84a0kXS5qJB9Aj9/8zFWm7puGHESP33zo/l8zKi8dRI/fvA0v7uai
H4wev/nZ5o8EvJKC0eM3nxUXM36ccQh6/OZXKNy26KoIQY9ffGvY60CbVYfQ
4xfv1B2TclrmMHr84g0eZDgE3T2MHr94l9RtAZ/WH0GPX/yaJyHvuPGh6PGL
X7Y8//SB3lD0+MU/vMT7az8KQ4+f/MqTKdr7ksPR4yc/MsrQYsWZo+jxk9e6
1/3z9Ylj6PGTn57Tv0Tk3HH0+MnL/fn5p+vWCfT4yS9Y6OMq+CYCPXr5iSev
vq8JO4kevfyRdX5ZGZMj0aOXd2s63XXiUyR69PIuadpD5185hR69vKrF4iHc
htPo0ctLXv5pFegUhR49vJNS86iFU8+gRw9/aHKo5qEJZ9Gjh48/+r01weIc
evTwW4blCLxZEo0ePXwWn95vceE8evTwZyW2/17/7QJ6dPO6ibK7/ZZcQo9u
foijnO6Jjhj06OblTHizLddi0aObN8n4p7m9MA49uvlapbGmb8ri0aObb7y4
vkOgOQE9uvktA9UVy4ddRY8uft+D2nrd/dfQo4vPvtiYKSKSiB5d/ITdczaU
ZiShRxcfuawtxOBsCnp08cY5mlu2ZtxAjy5e7eKCt2mqt9HjB79kxHsx+09p
6PGDN4r2PbMs4A56/ODF4m4kmk7MRI8f/Jh5ps/NpmWjxw9+t2H/kZHHc9Hj
B/9q4UKHE4556NHJu62N/7Rt73306OQvpssYNxsWokcnn9BxSEZobTF6dPKf
NeLvtIwoQ49O3jvr6dYdux6iRyev6uNu/TGiEj06+PI5yblT3Z+jRwc/4Hl2
ZMLuKvTo4C2jQg6u3/UGPTr422GTvbeG1qJHB79+euD4+1316NHBD8nXmebe
1IQeHbzNuo9j5U5/wfb/zr/XNAxalvgd2/s7/3fEy+6m4T+wfb/zzU4nyx5F
dmF7fuMPrl4a0nWyC9vvG79jx+T06qE/sL2+8c77Pwj8SfiO7fOVH/O0qaw1
4gu2x1d+bu/YY/WNTXj+X/kNul29Ad31eL7t/KqqC3M2nqjF82vnA2a5dtmH
vMHzaee5mJXTf4VW4fXUxkdd+HBcxPc5Xj9tvFB6YllUTiVeL238qgunf7Uk
PsTr4wtvsMvDUnd+GV4PX/iBy9FJz68Uo/8XfoT4KVkn/0L0/szPubRobIoY
j76f+ZZCXav293no+Zl3v7B+ytOxd9GvlZ9jJph59mM2erXylzXnVKU0ZaJP
Kx/QvjVKfVIGerTyJakmvmkZ6ejRwuvrjqu7uDINPVp4l1zxpLbQW+jRwi8o
XTfud+gN9Gjm/cQ28BGlKejRzPt+4aeKmCSjRzP/bvyqPY9fJ6JHEx9x/tPB
/Njr6NHEp2rUhN05fg09mvjmsqoFu2KuoscnfrxKttOVx1fQ4xOve9P0yUnN
K+jxiQ+6PsteLjgBPRr5Ue0nAz+LJ6BHI5/8urK54Fo8ejTyjUaJU3t84tGj
gU+KKv0sqhiPHg387Z6IfwZlcejRwL9bs+NXz7o49Kjn4fGQxnrxOPSo54+r
L9XVtItFj3re+dtfk+LIy+hRx7uc2Bk4QuQyetTxPrcda/QTYtCjjld8Z2dq
ERCDHnW8kP89a1gRg+3/ka9NAqP8EzHY3h/4X5LD4jS/xGD7fuCPCKRHTdl7
Gduzli9qXXupaXYstl8Nb/d9W3mHeRy2Vw2feXzmzLr+OGyf97zanMebgv5S
e7zjH/SmZGrYXsHzf8eLfukWM/xyFc/3LZ/iXjP0vEAint8bvuxEmNHTU8l4
Pm/4rVF3Nl+OvIHXUzUvuFVa40PGbbx+qvnWQ5OFUyek4/Xymh86erhSbX06
Xh+v+EuvW6WcctLxenjFq17VEvv6NA39q/gf0yJkrmjeRu+X/PzrnUd9Tt1A
35f8q40TJNZsSEHPF/yFIVt2vHuehH7PeYh66eiVk4hez3mDpMZRuYqJ6POM
v3bjmn7Ai+vo8Yz39F32xe7bdWz/J/zqpr1VsxcnYntX8p9HnWgK0kvC9n3M
lxsWX3k2Jhnb8xHvNf7V1fBdKdh+D/lgfb8F+/+mYnuV85viS94kRt3E9nnA
791sw88yuY3tUcofl5NWswuk8y/hRy18r/l7ZzqebzF/acWws0Oy7uD5FfJt
X5efnmufiefD+JBDWk/1bLPx89/n98xLD/Ipz8XPm8/vEPIbuNuZh5/vLm+7
SM9KuJHHz5PDV95NZsKLi/DvZ/LnluT/87Ypxb+Xzlt8638gc7Qcj3+L352x
qmV8TwUeL5mfp/tm6JPRT/H3r/JiMjtiZg48w5+/zFcnFRl/9HiB34/i/eaE
j15f8hL/H8Kfu6J6e8jaVzT+EDi46s5ub5Vq+j63L6SzJ9CH3kdR3Dfb9+LC
H9/Q8bl1Bqm+acX0/atccZ9y6uitb+jzca0zlkhIr6Sfv8VF9effqP/8hs6P
KxQcuiZ22Ds6f+542qTGSwo11D7c9JJhux7u+EDtxzVJabzh/OqofbmNflP+
7papp/bnHu67Plysto58uN5tt5b8OfuR/Lg9XyT2ajvWkC83SfXmj6wo+vwl
3IdCscIdyq/o+uCG+B712Kf8gq4frmDzwy93PZ7S9cX9m3570u/D5PGQ0wqd
N29dcDldn9wwlQP/xATK6PrlbK95TjJ6Qv2HSu6NYGCxXn0hXf/cIo8Tv2WB
0f3BHVvqlFHWXED3D3fnoFZjwE96Pz3nhF1za3/G36P7jzOK+b37U+lduj+5
OQnjT+6adpfuX2706K85ycW5dH9zagGxv/ctzKX7n1Oe4G2sLpNLzwcO+iNm
Zn3KoecHF+wW1L26JoeeL9zPIVFt3SU59PzhNFPL48+tyaHnEyfF3xddzmfT
84v73f/F4nFjFj3fOLWdsSPWS2fR84/zFH9+6K9fJj0fuYY++e/KIpn0/OT8
Yw3fzO/KoOcrZ9ho76lrmEnPX25uwXUxz8OZ9Hzm9t58p/xNJIue39yy3S8z
n0dk0fOd030q1vRHie7fD5zS20vW0UHZ9H7glA8vknjyKJveH5xq6qcJen10
PnWc+7rbIw8q5ND7h5s+8Nvok2wOvZ+4DGYrH6uUQ+8v7tSnMZO3uufQ+41r
/rPQvbIrh95/3Pz3TlHuCnfp/cj9rLNeHRl9j96f3PkE+Z0TffPp/codOXZ4
9Eqj+/T+5ZbWNpsmtPD0fuYWr05TDkhh9P7mNs+taXg/vJDe75z8wmoPa+dC
ev9zl+53Tq0aVUj9A+5D5PdbWh2M+g/cV1GHpgVVjPoXXMDFd72jvjLqf3DB
PSlz+cmF1D/h2lp2rW84Vkj9F86xech+/W663pu5yEC/woL1RdT/4bRqpRov
yBRT/4g7dtndTKummPpPnNmuDy7TGkuof8UVJO0MGNAso/4XpxDfVh+54QH1
z7gQhVCLqzXl1H/j6pfbt0esf0T9O+6FYbBqiNFj6v9xgeZr9OJ0nlD/kLsh
kjrfvf4p9R+50fs/9zw4/oz6l9wJw49OH9gz6n9yweGy0p6nn1H/lNu6rDJt
u8kz6r9yQ+3n73R88pT6t9zYi9Gr5E8/pf4vBz/tVHOr6HnezjmmO5mdtHhG
/WdujdTytp6rz6h/zb2+5uGbI/Gc+t9cluHtGPHZz6l/zokebL6dsfE59d+5
3NrwgC7P59S/5ziVr04i//e++MYpBM8QdYh4RuMDbreA5xfTCc9o/MDtuX/m
zcqWpzS+4IrvZ1X75Dyl8QdXmfHKIT6azqeD67/gLDDBm56XHZxPjXyr+dMn
NL4Z9PUtFPxXSeMf7u3IphEbWx/T+Ii7rCunohxTQeMnrrlCwOcTPKLxFRcm
+bku8W85jb842RIFJb7hAY3POKX79SIuP8to/MaFaTke9DYqo/Ed93DNLGeD
c/S+7eSqhwof+6tZSuND7mLUR51tN0to/Mg9v9nnMNW8hMaXXMulGVLaacU0
/uQutF6szpcspvEpZ5btvbdhQRGNXzm/yGFpf0oKaXzL7V579uaOxYU0/uWa
3kwUETYqpPExZ7N5WJYrFNL4mUuPHld3c2Mhja850weRRZvSCmn8zW1ZqWPF
dRbS+JzLnGisMmdUEY3fudBZZpaejkU0vucsDw30TrOl/kc3VyUTPu+bZhHN
D3CPledWfKmi50E3Z2Ke7jP9cCHNL3Ajhy99LDijkOYfuMd+x6//kSqk+QlO
TUrf6VcfPS96uNNHzo+cZUDj6R5u0+PZ6osHnw84/8GpeDo1W00povkRblmt
2bI3A0U0f8L11/ibj31M47le7tIIpeSIneTRy42p9vKY8bOE5me4vCEyWq9d
S2n+htu0z+/i5MOlNL/DpUiXrN2YWErzP9yGmtwzl+6W0vwQN36rZ0/co1Ka
P+LuDJn6MLK9lOaXuLcfdnE/JpTR/BM3Z+/IUW+jy2h+irtWpZgzfcQDmr/i
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

      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
sX2f8GUGRVefj03C9nzMu054fS18VzK23yM+WM97yf6/N7G9yvhNccVvEiJv
Y/s85PcGWPFzjVKwPUr443LSqjaBdP7F/CjP9xq9O9PwfIv4GN/h54Zm3sXz
K+Bbv606s8g2A8+H8YcOaT7Ttc7C7/+A3+2RFuReloPfN5/fIeQ9kPszD79f
Lm+9VNdCuJHH75PNV+QmMeFlhfj3M/jzy/P/uVmV4N9L482+9z+UOVqGx7/D
705f83lCVzkeL4n30Hkz7OmYZ/j/X+PFZHbEzBl4jr9/ma9OLJzx0eUlfh7J
ey8MH7Oh+BX+O4Q/f1UlZajfaxp/CASvubvbTbmaPucOhPzsCnSn91Ek1279
Xlz44xs6Puenf9MrtYg+v8YV9yndHLP1DX0/rmXWcgnp1fT7d7jI/vxb9V/e
0PlxBYLD1l0Z/o7OnzuROqnxknwNtQ9nXDx816MdH6j9uCYp9Tecdx21L7fJ
e8rf3TL11P7co303RojV1pEP173tzvI/5z6SHxf4VWKvln0N+XKTVG7/yoyk
71/M1RWIFexQek3XBzfU66jLPqWXdP1w9wMefc11eUbXF/dvZsqk3sPk8YjT
DPXwWB9cRtcnN1z5wD8xgVK6fjnr6/MnTXtK/YcK7o1gYJFufQFd/9xSlxO9
ssDo/uCOrXBIL22+T/cPd/egZqN/D72fXnDCTjm1PXH36P7jpsb07v5Ukkv3
J7cwfsLJXdNz6f7lxoz5lp1UlEP3N6fqf6V3n2cO3f+c0kS3GWoyOfR84KA/
Yk7mp2x6fnDB84I619Zk0/OF6xka2dpZnE3PH07jZlnc+XXZ9HzipPgHoqv4
LHp+cb39X82eNGbS841T3Xll5AbpTHr+cfPFXxz6651Bz0euoW/IDyWRDHp+
cj5XDN4s7kin5ytn0Gg7X8cgg56/3KL7N8TmH86g5zO39/Y7pe8imfT85lbu
fpXxIiKTnu+czjOxpj+KdP9+4JTeXrKMCsqi9wOndHipxNPHWfT+4JRufpqo
20fnU8fNXZ8y6qB8Nr1/uJkDvdM+yWbT+4lLZ9ZDrihm0/uLi/w0dvJW52x6
v3HNfzydKzqy6f3HLXnvEOksn0vvR66nznLtqah79P7kLsQP2WnolU/vV+7I
scNjVk97QO9fbkVts3H8Z57ez9yytalK/smM3t9cwKKahvcjCuj9zg3xrHax
nF1A73/u0oOfUytHF1D/gPtw6scdzXZG/Qfum6hd05JKRv0Lzv/iu+7R3xj1
P7jgruRF/OQC6p9wrZ93bWg4VkD9F86+eeh+vU663pu5U4HeBfc3FFL/h9Os
lWqMlimi/hF37LKziWZNEfWfOJNdHxynNxZT/4q7n7jTf0CjlPpfnFxca/2p
jQ+pf8aFyIeaXaspo/4b17DKti1iw2Pq33EvDYJVQqY9of4fF2i6TjdW+yn1
D7lbIjcXO9c/o/4jN3b/l66Hx59T/5I7YfDR4QN7Tv1PLjhcVnr+mefUP+W2
rqxI3W70nPqv3DDbxTvtnz6j/i037mLUmiFnnlH/l4MeG5WcSnqet3H2aQ4m
J82eU/+ZWye1qrXr2nPqX3NV1128siVeUP+byzRIiRFf8IL655zoweaU9E0v
qP/O5dSG+3fMf0H9e45T/uYg8n/vi++cfPAsUbuI5zQ+4HYLzP9qPPE5jR+4
PQ/Ovln9+RmNL7iiB5nV7tnPaPzBVaS/touLovNp5/qjZwtMdKPnZTvnXjOk
xfTZUxrfDPp6FQj+q6DxD/d2VNPITS1PaHzEXdaRU1aKKafxE9dcLuD+CR7T
+IoLk/xSl/C3jMZfnGyxvCLf8JDGZ5zig3oRx55SGr9xYZr2B92mldL4jnu0
bu5s/fP0vv3JVQ8TPvZXo4TGh9zFyI/a224X0/iRe3G7z26qaTGNL7nPl2ZJ
aaUW0fiTi265WJ0vWUTjU84ky21vw5JCGr9y3qeGp/4pLqDxLbfb79ztHcsK
aPzLNb0xFBGeVkDjY84qYHimExTQ+JlLixpfd3tTAY2vOeOHpwo3pxbQ+Jvb
slrbgvtZQONzLsNwhvLC0YU0fudC55qYz7cvpPE9Z35ooHu6NfU/OrlKmXCP
7xqFND/APVFaVP61kp4HnZyRaZr7zMMFNL/AjRyx4ongrAKaf+CeeB+/8Ueq
gOYnOFUpPYffffS86OLOHLkwaq4+jae7uM1PFqgtG3w+4PwHpzzfodliSiHN
j3Ara01WvhkopPkTrr/Gx3TcExrPdXOXRiomRewkj25ubLWry6yeYpqf4e4N
ldGsciqh+Rtu8z7vi5MPl9D8DpcsXey3KaGE5n+4jTU5Zy/lltD8EDdh6/yu
2MclNH/E3R069dGpthKaX+LeftjF/ZpYSvNP3MK9o0a/jSql+SnueqVC9syR
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

      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
z5yNWl7+kOa3uPUNQf5CgWU0/8WN6Dg7evS0RzQ/xnkt+Tntbesjmj/jxsTc
+xB15jHNr3HrLVrWSinR/fGbm2koGN05v5zm5zjlj+N3VW4up/k7TnjpfYfM
neU0v8cVaA4plD1J/Zdeblj61EcnysppfpCbGGG4acH4JzR/yEltvy5onvGE
5he5UaVjAzScKmj+kdvs7DplXXUFzU9ymxcIXlf2fkrzl1x9Sf7hpudPaX6T
C4rNer9Y7xnNf3JiviK3fk17RvOjXNl6V8FQqWc0f8pJGF87XxH7lOZXuYvn
H4WHyz6l+VdOpHJ9zpxVFTQ/y2kU+p26fvsJzd9yn3ub30tVldP8LifSeXdX
8OvHNP/LyeV1JM3IfUTzw9zpVZVNdrfKaP6YY/VtU+48o/dLHycc5JRVM+0h
zT9zuQM9IRKfS2l+mhu2vKHh6oNSmr/mUn9MOva9hOaL+rkPI8ardH0ppflv
LnT9iig3iYc0P86NmijofU73Ic2fcwlewkO2az+k+XUOgqYvlxZ+SPPvXIXu
x6Dwd6U0P88davD7+Di+lObvuQaNbQn3l9P8yAAXfP1u61DlUpr/50Z/tjG5
m0P3xwBnUOa9eron3R//uP623T9GdBfT+gLXbDL3xrPUYlp/4FQ2rdNfcqmY
1ie4MLHc4IDiYlq/4OYUhGnwY0pofYM7fyFibNPg38PhB/TOsNs90bmU1keg
drvX/NCH1H8WAKGf/5oNVR7S+grkD1mqrTXhIa2/QOuT8rqCwfbC9RmQeX1n
oVtXKa3fwLKwXR/qH9L5C8AY8+FbXkaX0voPaKw7M3HKVmoPAUiUdvOeaVFK
60fw7m/Udt/B/jyuL8GI2DO7WFkJrT/Bn/b6zU7/9zwRhKNSba4nE0to/Qpa
nJ9+sKyk54sghKqMGP1mIl0PguBjo7ZtZH4prY/BXD+zGBt/ep8JQln6+RP3
ZpXR+hp8cbfmN496ROtvcOrkZEnxnke0Pge3eIVik2uPaf0Ogta7dmoNKaf1
PUjSah8SvKKc1v8gYLRMmtJOuj+E4PwTf4Eev3JaP4TL/W3Fsz3LaX0RkoVf
Dx01upzWH6HG0srJ9t1jWp+E4ILQqSbzH9P6JdS0TrvdkEDPNyFQfpHREfyu
jNY/QcngU+hj0TJaH4XkXfv2DrF7SOunEHXBT97jNnkIQZtUxc7PduQhBDYw
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

      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    GrayLevel[0], 16],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-6, 8}, {0, 2.5185316387104386`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.836886595484166*^9, 3.836886662256596*^9}, 
   3.836886795946219*^9, {3.8368881488410535`*^9, 3.83688817177104*^9}, {
   3.836888379868868*^9, 3.836888391650994*^9}, 3.8368884239581003`*^9, 
   3.836888566314313*^9, {3.8368886173246527`*^9, 3.8368886451387854`*^9}, 
   3.836888724474656*^9, {3.8368887583437767`*^9, 3.8368887802797337`*^9}, 
   3.8368888211636057`*^9, 3.836889010165367*^9, 3.836889042194358*^9, 
   3.836889072382922*^9, 3.836889110202876*^9, {3.836893567031017*^9, 
   3.836893601169037*^9}, {3.836893663893115*^9, 3.836893678661317*^9}, 
   3.8368937286313515`*^9, 3.836893758825429*^9, 3.8370720681379013`*^9, 
   3.8370732372746716`*^9, 3.837073326693754*^9, {3.8370733643827934`*^9, 
   3.837073369337982*^9}, {3.8370734634123783`*^9, 3.837073530303504*^9}, 
   3.8370735650971007`*^9, {3.8370736045551414`*^9, 3.837073630503255*^9}, 
   3.8370780458944597`*^9, 3.8371474512680635`*^9, {3.8371477777377768`*^9, 
   3.8371477950977564`*^9}, {3.837148101922799*^9, 3.837148118967271*^9}, 
   3.837148327162032*^9, 3.837148494346841*^9, {3.837148597466993*^9, 
   3.837148628741809*^9}, 3.8371486840868807`*^9, 3.8371504824646072`*^9, 
   3.8371585048551397`*^9, {3.8371585665075674`*^9, 3.8371586662589254`*^9}, 
   3.837159732006283*^9, {3.8371597815171304`*^9, 3.8371599402431097`*^9}, 
   3.8371669166191187`*^9, 3.837166952832821*^9, 3.8371670061346493`*^9, {
   3.837167068955392*^9, 3.837167178899399*^9}, 3.837168440600404*^9, 
   3.837170275410905*^9, 3.837170311130438*^9, 3.837170500383235*^9, {
   3.837777853919334*^9, 3.8377778714692945`*^9}, 3.8377779610590506`*^9, 
   3.8377780113690376`*^9, {3.837780264481223*^9, 3.837780289676513*^9}, 
   3.844662048327362*^9, 3.8446622410421457`*^9, {3.844662371960655*^9, 
   3.8446623872643147`*^9}},
 CellLabel->
  "Out[1335]=",ExpressionUUID->"744547d0-cadf-4dba-8daf-f67d92882474"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Im", "[", "gammaSet", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Emin", ",", "Emax"}], "}"}], ",", "Full"}], "}"}]}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Emin", ",", "Emax"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.83716858133578*^9, 3.83716865514675*^9}, {
  3.837168970636045*^9, 3.8371689970669203`*^9}},
 CellLabel->
  "In[1336]:=",ExpressionUUID->"6f6b2c07-6f0a-4d11-bcfe-acbded2ad489"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw93GVYFU8XAHC6uxu7C8WOOQIqKmJioxiIgah/Fbs7UBRFxe6AC5dGakcJ
FREQRBGV7u6O98acly8+COzdnd/M7NQ5fTfuWuIsJSEhcUhWQkL4r/jLgO7w
n/N4nZUvaRmy9vrHZn3qF8x7897al1QtjjA7V6lPj+1R2a83y5fkH9bxn5Ov
T/+UbpLZP9uX/Hq+e7rSL336RS9keeYcX/ItWfilT216unZMnOtL4pqFF9Sn
do9m2Nyf50uEV1scoU8vPy82l7TzJYKLCa4o+LwQg+NbF/iSF8LLPden8sMD
c7/b+xKfe8IvfXpbLsBm+iJfIrg5wQX1qVLNpBHvFvsS4dXMzunToClD9A2X
+pIjwts7rE89q47KXl7mS/YIL7dbn3YuTwrrcvAlW0Rf+rTlkMbwPSt8yVrR
BfVpkv+QwtKVvmSJ6Ab16agHk9c5rfYltqIH1qfmVtYPstf4EtHlpuvTqnYz
sxWOvmSc6Eufzt7euDFznS8ZKrqgPj1ada/SwcmXmItuUJ+SwZMnZm3wJaLb
09Gn4z9NP792ky8RXU5J8DyHdAwLN/sSsYc+3VZY6LZjC3ro0dfrzym0uKCH
HjWYefXl6W3ooUejL7TN0tyBHnp0Wt6EYc9c0UOPNjzM1hzvhh569NTORdOT
dqGHHq2yv+u3YQ966FGP27PMO/9DDz26YebK29770EOPhvu+vW7pjh56FI44
efw4gB569OXa8hT3Q+ihR0sW2iwzPoIeevStZI7jx6PooUcfG/zbvuM4eujR
PTP9o/ROooceTRgS6xl/Cj30aHPfJ2/3nUEPPfriN509+Bx66NGxz4MH/z2P
HnrU+/hBO6+L6KFHTxgcbba7jB56tGJ3bD/Fq+ihR0f9Sff65IEeevQh/+aX
i9fRQ5cW3xlgbXcDPXRpwPRm0PJCD13a+VQmLvsWeujSXXs4xVfe6KFLuSV2
t/be9SWi4vuoSyc+Plto7YMeutTiXWeY3gP00KVL+5gtrHqIHrq0admJHfGP
0UOX0qYrdo+foocuDem1bjj6HD106bAvU0wcX6KHLnV7N3c+vEYPXWo5707P
wLfooUv7OXi6q/mihy6d9NUyuN0PPXSp+ar6plJ/9NClw5es6szio4cu3Rjm
mpgchB661GXsXe+4EPTQpVMS/+yICUMPXTo+IUk2MgI9dKnk3+8v3keihy5t
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
5m6u7bHuOGYO4vKo5vh9vq207DYE8fNXcwYz+r2yWa0Ln0XPW8Xd/qG4td8D
TTgoer4qTs31ttMeW1X2PILvH4x7FnJHAX6K6lMlJ7HrlExCrgyI608lZxt/
y/ZZqSSMFdWXSk48behl9aOC6x6/6rlZv05yTVQfKjgJ05KvynWtzL+CW+++
0ExvXjOpEF2unFu0skDSWbuRjV/KuZaNQwZnj68nouKbU87lJQeUSMysJeLm
WcbxNS/+ar5SRUS397yMG9bpr9AzsYKILre4jJsg7F8sy0iv6KuUUxdU7437
SghPdMFSbqH7uOfm1UVkjcijlFu75uC6Yd6FRFHkUcp1XXli4bW1gISLPEq4
kn6x2sHr8tl4o4SrGdT2qnxvHqu/JZzlg7ETc21z2fismHvk1LvfLfsfq5/F
XNK5JM77zl8iupxZMZfedm7FzaN/WH9QxI0br5jjeT6biIrvcBG37FJQ+K3g
36y9F3Gez1L+Wkv9JmKPQm73vQxniz1ZrD0XcvZH5qVc6v5FxB6FXKHZfPPI
J7+YRwG3z8tAZrn9L+ZRwOWa+GeatfxkHgWcu7A9efxkHvncfP6kB+26P1l7
y+eSJv75e/dRJpktHtBxMyOklJotM1n/lsfFH9j480r+D+aRx506tq8i6fUP
5pHHRZSnHn9x8QfpEXnkcrpfR/LOn/1BVovKP5e77Xxxk+ODHyRMVEA53Ir+
Uelj038QLVH55nCzRj9f6TY0k+wSlec/znqa1uiFrzPJV1H5/eWW/1lQt2Dp
TzJYVF5/uavZ3cPoxF/kjKh8/nAxk+ozr23MIrmi28/mwqs0evnFv8lU0fNn
cxo3Ze3yfv5hz/ub4+9cvOWMXQ57vixuru2LnV1v81h/nMVtP6P9PWBnAetf
f3E+d+Jqps4uYv3lL+6qoPq8+VXM+r+fXIF86dJP70qIuL1mci2V9gceHSwh
JqL6kMmpuRwfL7+1mIjb4w/u2XH9sC2VheSH6HIZXH7Vz7GGbgXMN4PbGHXk
ZM3wfOaZzsX+id6zZFIe8/vOLTOyCE7tn8u8vnMyHvdsYpxyyDORTxo3bkxD
0CC9HNIl8kjlOn41JDVPyCEhovJP4SxCX6o1ROYQV1F5f+PmidYHc8kAUfkm
cypBzu2Rrnnkr6g8k7jL7rpLjo/NJ7dE5feFc9Q/vnuGbgGxE5XXZ65ozF3O
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fQX3ZFJobfu1/qAlLa8Krs1ma9Kpmt5ApeVTzv1ZtmuWRUMPkJVHOXcr53Vg
5fSueP3lnOZNs93T15jBR+n1lnGqIZ4e8esMYY/0+sq4phHtfy666+L1lHFP
BZEinXlakCqtT6VcxrYzF/ICVUFWf0q5q7kOxa5RimAtrS+lnPSw5xRAVj9K
uBPem+vv1QnggrQ+lHDa5yu67PLsRP8SLt+3Z95RizZSIj1cMbd/yDXd8r7N
OH4p5hSuV1cO9W0g0uKbUszNsTsxP/JyHZE1zyJuyHaDhuB3NUR6ek+LuN/q
aQarRlQT6eHmFHHra66luEdVkk7pXyF3jq/erWvKiY/0gPzr9dpz7JeWksVS
j0Ku5m7sdNH1YqIs9Sjktp+cubJAWETCpB4F3PxW97GrHxXgeKOAC5Hb5LVw
TT7W3wKuatjt6lDHPByf5XPZYV3jNizNxfqZz3X0fGU/5GQOkc2D8zmFj98C
jiZmY3+Qx92Z1Dv0iFU2kRbf3jxuUe/b9/7ezsL2nscdueAU8qx7FpF55HLH
3gbtSjueie05l1tw9YW3Z2kGkXnkcjs2vTQq3JKB7TWHG7Y0YpqaMIPIPHK4
d+v7L990Lh09crhz3VNz5sqlo0c21/Hnot7l5f+wvWVzbblR61fFppHJsgEd
dzdvStuZ4WnYv2VxDy/Eq82L+4seWdzd0mHJjh5/0SOLs/nuOyFx1l/SIfXI
5ELb+/WbOf0vWSQt/0zOla++Buv/klBpAWVw4R/HuaQH/CU60vLN4BoG7Ijo
b5VGtkjLM52rLQ4YIJ+URj5Jy+8fF7ZW8Ncp6B/pJS2vf9zrNeN7V+amk6PS
8knjSi8OVnPenkkypaf/l7u3fsDnCW+zyBjp9f/lfv/u+TpMnIPX+4e7RX3e
erzOxev7zR074hi83S8f++Pf3KLvBaPClIuwf/3F3Rm/3zX+vxLsL39xpyTV
52YZ9n+pXMthr7GH/cuJrL2mcHTJWYNHm8qJmbQ+pHBnvBKj+wnLiKw9/uRm
dynT8xKXkJ/Sw/3gHILg7USVIvT9wc3eZrYnZEkBeiZzXabsWJlvmI9+3znR
6fIKgU0een3nvvUd+rw+LJc8kfp84+7cfFcx5kQuaZN6fOUSlhjPM72XS4Kl
5Z/EVdy5lGpUl0s2Ssv7C/dqrkW60tk80kNavp+59JXzjONc8sk/aXkmcoOp
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
v+hoOQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
QXA+yRE+718utftQ0b17BeSw8Pn+ck/nr1iSkPaVPc9fLnT56pnvWgvJV2F9
quPW5O6fm2HzjdWfOs6gon6WXE4xsRDWlzrO1ntzV+veElY//nAzHU0sfs4p
IxeF9eEPZ/ct+nGsWTnz/8O18dQ7s5ZWkD/Cy9VyjxYFpj8KrmTjl1puatyG
+6o61URYfAtqubu3J1ZZvfxJRM3zN+etsCBgUcwvIry9h7+5yeq9xfzaWiK8
nN1vLllPsm6y11/SL/z5xblYeSfByUYSIbzgL87DquBq1+lmsk7o8Yvb1LTL
dmNoK5EXevzicoilv+rodpIk9KjhXHeHdAVP62LjjRruAz9wS2xnD6u/NdyF
fzf0VgxE47Of3GOVFo9xTyVB5PGT++G8f4vHbFkQXs7kJ1cSvEjG+60iiOpf
NTfQlOe8Kl0NhMXnUc0ZpM1t+wpaIPKo5iJvesbl7tUDkUcV56u8NCpQ2hhE
HlVc8WSnMTMTBoDIo4rz0M92t1k3CEQelZzXC5eiRL3BIPKo5GqToiR/lQwC
kUcld3m4deHiDwNB5FHBGTtsnfbDdACI2lsFZ5XqU3RzkBHMFw3ouJpBGZpx
Zbogak/lXPmO9ZPVWjRB5FHOedh6/Oi8pQYij3JOQ9Xstnu2IvQJPX5wl6pb
TPNcZcFBWP4/uL1GMTr3JKQgUVhAZdx069TtLUvEQUNYvmXcW1vy5NyKPuIq
LM9SrnOgawq/mU/eCcuvhNNdNOy/g/M7yXBheZVw49/LF1ePayc+wvL5zulY
jYmxuMUjP4S3X8ztE+vNOL6/lUwTPn8xNzTX9EtxfAvrX75xO469Hb92fQvr
L4o4ow2P0uqcW1j7L+IWX/j0Mb+uhfWvhVzQru7Vq4pbWXsu5LyblQz4w9tY
//eV+zZraOSW4HbWXgs4sVULLh541UGMhPWhgHN44TrnvG4na4/5XMNq8Yzv
0ztIvvByXzgXfbfrV7a1sfb2hcubnN+YqdPK2lced+rnxyTpd02sPX3mQsc1
7nt8pp6IvD5z89Ttk+LG/iEPhD6fuOgJ6468Of6L9Ag9PnItdaeLHDf/JPHC
8v/ADfh0M/5pahVxFpZ3Lqc8QcF6+/8qyRBh+b7n8jdFRZd7VZASYXm+5doH
z9u6JrucBArL7w2ntT78yQurcrJYWF45nMyJa3POOf8gUsLyec35u7TLvt1b
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
5NFOVEYvyIGN2D+2k7ni31/4H+tjHu1EdWNafEUT9pft5FS0gc2a272sfrcT
4fh4Ry9rr+3ktLZL18JFvWw9uYO87XnommfVi+tDZFDPuZDxmr24fkRMdHYv
af3Qw9pzB7EtXlE6eF0PWw/vIGs2tpCutG5cnyLXxXqWP5PqxvUrcvdb5CdZ
G+x/O4lytrFry+0utn7cSd7a1/XO7+7E9TFSIRi9PNzbietnRPrJ0217ejtY
f9BJ7n+3MXiY0MHaRyfJWLry/omgDlyfIyb90ifFbmL76CID7qS2rL3bwfqL
LnJSTH/qwYAO1j66yHXJGfmJmztwfZBIyVjfW6XegeuH5GaR53rDZ+2sffDJ
n8PvYdv0dubBJwvHwwP5/DbmwSdrXkZnBR1ow/VLsnPN+dSvgnoi8uCTkmEl
o1q/8pgHn+x69aD2byiPeXST9e+2Tr57iYfrp2TtBLn9aTd4uL5Klr6ZEnM6
kcc8usm5M7mvEyp4zKObtMtsClqs3Ybrt+Rac6Ol+fo2XN8lhvlee4a/bWMe
PaScO7Kvck878+ghVkX5R1YI5kNs/ZiYfX3aMmMwevSQspoLVzN7OplHD1nZ
80Nd+1kX8+ghPwY4jCo24uP6NaELd75LWcHH9W3iPc+rV20dvk97ibmsx5O9
c/jMo5ccbnwyfuAwPq6fkyFHfW8N1Obj+jpxdjoR9VuHzzz6yMKyKYH3R/KZ
Rx+JsFP9/NuWj+v35FlKieMTHz6u75MHoz2PRbzjM48+cifjbtRacxxf9JEQ
vbUWr2O7mUc/sbfZP8p3ZQ/uL5DwtxmjTvb34P4DyVenuZV+vcyjn4zbbrNq
XnIv8+gnkadezrju1Yv7G4T/uDZOsqEH9z9AbOKA2eun9BBt0f4IBPE67A8H
dOP+CZhXPZa5pdrNnk8M5B7fWmvzgo/7L2A4Oji06yGf7BDtz8C4B/VBqWF8
3L8BXae2BXqv8PnFIPjCtaAdP/m4/wMO2hXDHgrqXYpofwh+ZcVJ6c/qxv0j
MHsu9d/MACwfMdg2yZL/uakb958gwej3/cQlPURRtD8FFX+/Wuhf7MH9K/gT
G1TkGYzlJw6zeKGLd+/swf0vGL10wF+tum6yQbQ/Bgbak7/JCDxE7zNxUGx0
V/9hjeM7cVjomnypxAHfb+LQUPvnYvbBTtyfA5d7K7cvCutg7zvB9UcnmzaJ
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
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
QXA+yRE+718utftQ0b17BeSw8Pn+ck/nr1iSkPaVPc9fLnT56pnvWgvJV2F9
quPW5O6fm2HzjdWfOs6gon6WXE4xsRDWlzrO1ntzV+veElY//nAzHU0sfs4p
IxeF9eEPZ/ct+nGsWTnz/8O18dQ7s5ZWkD/Cy9VyjxYFpj8KrmTjl1puatyG
+6o61URYfAtqubu3J1ZZvfxJRM3zN+etsCBgUcwvIry9h7+5yeq9xfzaWiK8
nN1vLllPsm6y11/SL/z5xblYeSfByUYSIbzgL87DquBq1+lmsk7o8Yvb1LTL
dmNoK5EXevzicoilv+rodpIk9KjhXHeHdAVP62LjjRruAz9wS2xnD6u/NdyF
fzf0VgxE47Of3GOVFo9xTyVB5PGT++G8f4vHbFkQXs7kJ1cSvEjG+60iiOpf
NTfQlOe8Kl0NhMXnUc0ZpM1t+wpaIPKo5iJvesbl7tUDkUcV56u8NCpQ2hhE
HlVc8WSnMTMTBoDIo4rz0M92t1k3CEQelZzXC5eiRL3BIPKo5GqToiR/lQwC
kUcld3m4deHiDwNB5FHBGTtsnfbDdACI2lsFZ5XqU3RzkBHMFw3ouJpBGZpx
Zbogak/lXPmO9ZPVWjRB5FHOedh6/Oi8pQYij3JOQ9Xstnu2IvQJPX5wl6pb
TPNcZcFBWP4/uL1GMTr3JKQgUVhAZdx069TtLUvEQUNYvmXcW1vy5NyKPuIq
LM9SrnOgawq/mU/eCcuvhNNdNOy/g/M7yXBheZVw49/LF1ePayc+wvL5zulY
jYmxuMUjP4S3X8ztE+vNOL6/lUwTPn8xNzTX9EtxfAvrX75xO469Hb92fQvr
L4o4ow2P0uqcW1j7L+IWX/j0Mb+uhfWvhVzQru7Vq4pbWXsu5LyblQz4w9tY
//eV+zZraOSW4HbWXgs4sVULLh541UGMhPWhgHN44TrnvG4na4/5XMNq8Yzv
0ztIvvByXzgXfbfrV7a1sfb2hcubnN+YqdPK2lced+rnxyTpd02sPX3mQsc1
7nt8pp6IvD5z89Ttk+LG/iEPhD6fuOgJ6468Of6L9Ag9PnItdaeLHDf/JPHC
8v/ADfh0M/5pahVxFpZ3Lqc8QcF6+/8qyRBh+b7n8jdFRZd7VZASYXm+5doH
z9u6JrucBArL7w2ntT78yQurcrJYWF45nMyJa3POOf8gUsLyec35u7TLvt1b
xsojm/N1GrXTwamUPf9LDvQON8xYX0LGCZ83i0s4nb6MHvxOfguf7wXXc7Ei
5l52MQkRPg/ldgaa99rYF5No4f1ncHPdLfaFDSgmA4T3+5xbpDon7KplMQkQ
3l8K1x60cNfES8VETHg/SdwyseycK1O+Ezfh34/nOi/5/VabLOjPhH8vhtu8
wn54yJlSEiK8fiQnGBz5LjD8QbyF13vKXS6IuHt1Yzn7/6FcxribI/W0K9jv
3+W29X2etOtWBXEUfh/I6V82iw/vriAg/OzLXVl31cVmayV7f4RMNzq0SLau
v5JQ0ffkbO+2juqKKhIi+v8kbO63dW+7qkm56PrEKHHMW2e1GhIg+vuk5Y+R
ZGxhDYkW3R8JLEpIL9X4RT6J7p+YT4zQkkipIZ2i5yPvPx0e5N/6k3iLnp/4
21yc9kjyJ1ETlQ+puPlpSMyQahIiKj9yOPjB4BTPKjJOVL5k8yqzvF6jKkJF
5U+Saz96hcpVkSciHyKhXvn227Qq0iTyI+LlRXG/YqvIZJEvefNn1Udr12r2
91+SbRc8/Ocf+klyRPWDVC4XO7/jUw27n9fkyEBjk8zDv8kaUf0ivovWv052
+sPu7w1ZceP8liFH/5LfovpJDkT3fdyc0cDu9z2x1FT6ZfC4iRwW1W8SvCuz
/er4Fnb/H4hb/VzrhUN4REro8Yk88JylKB/Uzp7nE9GqW9F193IXWSxqX6Q2
bd3aB609bPzymczeELpMZ6YYiMZDeeTSfz9lI1vEQTS++kK2L9TODjsvCaLx
2hdimPrN1ExXGkTjjXzyYMS03pCLMiB6fxeQv8VlLtYfZEE0HiogWzeUzJdM
lgPR+OArkbooZeC8Wx6URP0POXKw6+vpCQogGn8UkjUHX5TfWqcIK0T9F6mR
2uveWa0EnaL+jXRmbn3mGKgCwaL+j7w2t0uf0KQKIOofycc9fzUKpqlBtaj/
JMOWSz+8wlcFf1H/SngrTpcoJanAaFH/S1Qeb+7011OGT6L+mfDn3h2yYb8i
HBD132TE6sM3znXKg56ofyfvU7RWX0uXg+ei/p+80y77OShDFhxF7wfyrzUY
1ciA6IxiOVn6eovMyMEy7HkE/UxWk/r4bdLwWPT+Ia9KEnw9A6RAtB4h+P1a
x957PpIgGh9WkNy37QNdp0iAaH+wgry91Km9p0gMRH4VRPZTY/eksf1sv7OS
WN23drKe0svGt5Xk5LstuTnl3aRS9H4lGsF8aFHpZuPnKjL0j/S9mlA+OSV6
P5ONj4e9MLzCZ+NzQb+6Wad4Si6fjBS938nv7cdDSiZ2s/FmNQkQ3E6yfzf5
IBofEP+dB2Rj9nez8dxPIrF79zeHH3ziLhpfEI9qVZm73V1svPyTqPfN+xQk
30V0ROMTMmT+xzEHhnay8WQN4S11i3kwv4OkisY35OuM2JTdG9uJqP78Il7l
I5cOcG4jG0XjI1JYmJovd4zHxrO/yORzuopzBOMlkcdvErj00l79phYi8vhN
HP9XvXCHYwsRefwmxRMGRoz/3UxE9e030RC8jqI8m9l4vZYEjt05UHxwM9uv
rSUt05Zsf17fxNpTLZF2izsc09TEPP4Q/9PjvAwmNTOPP6Rte77ntefNzOMP
iR0d1PlwZwvzqCMK2kYb1dRbmUcd8T+pvzz6VCvzqCPKTyY9rAlrZR5/SeLu
Qt94wfcij79kZp3BGNmprczjL+lcfal7leD9z8bXZEXZRTeH6BbmUU/yC4zP
7b3SwjzqySD7L+aPb7YwjwaiXb1jcGFuC47viRrpn3F4TCvzaCAvFZI8hzxq
ZR6N5K+fRKKPOo95NJIv1ompwfbo0Uh+GU3XvLWVR8RF8w+SWJy10cyRx56n
iaRPbi646MQjy0XzF2Lgm1L6TuDJ5jekZOmrznFpPJz/kET1pQctB7ex9bom
EvQsPntCRhtb32siH/zzysrPtbP1wGaiPkjf3flYB86/SL3PaMVhXp1sv6qZ
iMYbXcy3mYQ+vfueePDZ+dNmwj+y/LLClm6c/xGwMJ46Y2wPK68W8vT88Xv7
KnqYfwuZuM+dm3O5l5VfCyk/Ie6ruq0P559kvveXtMPH+3F+SlbtSKAm+8VA
VD9ayFyXU4ZNU8RF3ZtCKynwvOb5twH751Yy5c7WsHe7JIDNj8m/1aZxQRIg
qj+tJHlwsM5zfwkQrb+2Ei+9gdOL10iw/ryVdDvcMLhvKgFsfk5Cekqn7f4r
DiIPHpkkZqg28IM4iNYreaTOMKjELE+c9f88Ing7bd/ZIw5sfYB89ui0sJsr
AaL6xyMfjK44mN2UYP0bj8g0nzDu/ynB3hdt5LjtLK+JGtjftZGsEwGjHSUk
QVQ/24idzy69mQ+w/2sjSccu8evaxNn7pY3Q6J6uxAHirD9sI9/i7eWq7cVA
5NFOVEYvyIGN2D+2k7ni31/4H+tjHu1EdWNafEUT9pft5FS0gc2a272sfrcT
4fh4Ry9rr+3ktLZL18JFvWw9uYO87XnommfVi+tDZFDPuZDxmr24fkRMdHYv
af3Qw9pzB7EtXlE6eF0PWw/vIGs2tpCutG5cnyLXxXqWP5PqxvUrcvdb5CdZ
G+x/O4lytrFry+0utn7cSd7a1/XO7+7E9TFSIRi9PNzbietnRPrJ0217ejtY
f9BJ7n+3MXiY0MHaRyfJWLry/omgDlyfIyb90ifFbmL76CID7qS2rL3bwfqL
LnJSTH/qwYAO1j66yHXJGfmJmztwfZBIyVjfW6XegeuH5GaR53rDZ+2sffDJ
n8PvYdv0dubBJwvHwwP5/DbmwSdrXkZnBR1ow/VLsnPN+dSvgnoi8uCTkmEl
o1q/8pgHn+x69aD2byiPeXST9e+2Tr57iYfrp2TtBLn9aTd4uL5Klr6ZEnM6
kcc8usm5M7mvEyp4zKObtMtsClqs3Ybrt+Rac6Ol+fo2XN8lhvlee4a/bWMe
PaScO7Kvck878+ghVkX5R1YI5kNs/ZiYfX3aMmMwevSQspoLVzN7OplHD1nZ
80Nd+1kX8+ghPwY4jCo24uP6NaELd75LWcHH9W3iPc+rV20dvk97ibmsx5O9
c/jMo5ccbnwyfuAwPq6fkyFHfW8N1Obj+jpxdjoR9VuHzzz6yMKyKYH3R/KZ
Rx+JsFP9/NuWj+v35FlKieMTHz6u75MHoz2PRbzjM48+cifjbtRacxxf9JEQ
vbUWr2O7mUc/sbfZP8p3ZQ/uL5DwtxmjTvb34P4DyVenuZV+vcyjn4zbbrNq
XnIv8+gnkadezrju1Yv7G4T/uDZOsqEH9z9AbOKA2eun9BBt0f4IBPE67A8H
dOP+CZhXPZa5pdrNnk8M5B7fWmvzgo/7L2A4Oji06yGf7BDtz8C4B/VBqWF8
3L8BXae2BXqv8PnFIPjCtaAdP/m4/wMO2hXDHgrqXYpofwh+ZcVJ6c/qxv0j
MHsu9d/MACwfMdg2yZL/uakb958gwej3/cQlPURRtD8FFX+/Wuhf7MH9K/gT
G1TkGYzlJw6zeKGLd+/swf0vGL10wF+tum6yQbQ/Bgbak7/JCDxE7zNxUGx0
V/9hjeM7cVjomnypxAHfb+LQUPvnYvbBTtyfA5d7K7cvCutg7zvB9UcnmzaJ
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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw93GVYFU8XAHC6uxu7C8WOOQIqKmJioxiIgah/Fbs7UBRFxe6AC5dGakcJ
FREQRBGV7u6O98acly8+COzdnd/M7NQ5fTfuWuIsJSEhcUhWQkL4r/jLgO7w
n/N4nZUvaRmy9vrHZn3qF8x7897al1QtjjA7V6lPj+1R2a83y5fkH9bxn5Ov
T/+UbpLZP9uX/Hq+e7rSL336RS9keeYcX/ItWfilT216unZMnOtL4pqFF9Sn
do9m2Nyf50uEV1scoU8vPy82l7TzJYKLCa4o+LwQg+NbF/iSF8LLPden8sMD
c7/b+xKfe8IvfXpbLsBm+iJfIrg5wQX1qVLNpBHvFvsS4dXMzunToClD9A2X
+pIjwts7rE89q47KXl7mS/YIL7dbn3YuTwrrcvAlW0Rf+rTlkMbwPSt8yVrR
BfVpkv+QwtKVvmSJ6Ab16agHk9c5rfYltqIH1qfmVtYPstf4EtHlpuvTqnYz
sxWOvmSc6Eufzt7euDFznS8ZKrqgPj1ada/SwcmXmItuUJ+SwZMnZm3wJaLb
09Gn4z9NP792ky8RXU5J8DyHdAwLN/sSsYc+3VZY6LZjC3ro0dfrzym0uKCH
HjWYefXl6W3ooUejL7TN0tyBHnp0Wt6EYc9c0UOPNjzM1hzvhh569NTORdOT
dqGHHq2yv+u3YQ966FGP27PMO/9DDz26YebK29770EOPhvu+vW7pjh56FI44
efw4gB569OXa8hT3Q+ihR0sW2iwzPoIeevStZI7jx6PooUcfG/zbvuM4eujR
PTP9o/ROooceTRgS6xl/Cj30aHPfJ2/3nUEPPfriN509+Bx66NGxz4MH/z2P
HnrU+/hBO6+L6KFHTxgcbba7jB56tGJ3bD/Fq+ihR0f9Sff65IEeevQh/+aX
i9fRQ5cW3xlgbXcDPXRpwPRm0PJCD13a+VQmLvsWeujSXXs4xVfe6KFLuSV2
t/be9SWi4vuoSyc+Plto7YMeutTiXWeY3gP00KVL+5gtrHqIHrq0admJHfGP
0UOX0qYrdo+foocuDem1bjj6HD106bAvU0wcX6KHLnV7N3c+vEYPXWo5707P
wLfooUv7OXi6q/mihy6d9NUyuN0PPXSp+ar6plJ/9NClw5es6szio4cu3Rjm
mpgchB661GXsXe+4EPTQpVMS/+yICUMPXTo+IUk2MgI9dKnk3+8v3keihy5t
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
5m6u7bHuOGYO4vKo5vh9vq207DYE8fNXcwYz+r2yWa0Ln0XPW8Xd/qG4td8D
TTgoer4qTs31ttMeW1X2PILvH4x7FnJHAX6K6lMlJ7HrlExCrgyI608lZxt/
y/ZZqSSMFdWXSk48behl9aOC6x6/6rlZv05yTVQfKjgJ05KvynWtzL+CW+++
0ExvXjOpEF2unFu0skDSWbuRjV/KuZaNQwZnj68nouKbU87lJQeUSMysJeLm
WcbxNS/+ar5SRUS397yMG9bpr9AzsYKILre4jJsg7F8sy0iv6KuUUxdU7437
SghPdMFSbqH7uOfm1UVkjcijlFu75uC6Yd6FRFHkUcp1XXli4bW1gISLPEq4
kn6x2sHr8tl4o4SrGdT2qnxvHqu/JZzlg7ETc21z2fismHvk1LvfLfsfq5/F
XNK5JM77zl8iupxZMZfedm7FzaN/WH9QxI0br5jjeT6biIrvcBG37FJQ+K3g
36y9F3Gez1L+Wkv9JmKPQm73vQxniz1ZrD0XcvZH5qVc6v5FxB6FXKHZfPPI
J7+YRwG3z8tAZrn9L+ZRwOWa+GeatfxkHgWcu7A9efxkHvncfP6kB+26P1l7
y+eSJv75e/dRJpktHtBxMyOklJotM1n/lsfFH9j480r+D+aRx506tq8i6fUP
5pHHRZSnHn9x8QfpEXnkcrpfR/LOn/1BVovKP5e77Xxxk+ODHyRMVEA53Ir+
Uelj038QLVH55nCzRj9f6TY0k+wSlec/znqa1uiFrzPJV1H5/eWW/1lQt2Dp
TzJYVF5/uavZ3cPoxF/kjKh8/nAxk+ozr23MIrmi28/mwqs0evnFv8lU0fNn
cxo3Ze3yfv5hz/ub4+9cvOWMXQ57vixuru2LnV1v81h/nMVtP6P9PWBnAetf
f3E+d+Jqps4uYv3lL+6qoPq8+VXM+r+fXIF86dJP70qIuL1mci2V9gceHSwh
JqL6kMmpuRwfL7+1mIjb4w/u2XH9sC2VheSH6HIZXH7Vz7GGbgXMN4PbGHXk
ZM3wfOaZzsX+id6zZFIe8/vOLTOyCE7tn8u8vnMyHvdsYpxyyDORTxo3bkxD
0CC9HNIl8kjlOn41JDVPyCEhovJP4SxCX6o1ROYQV1F5f+PmidYHc8kAUfkm
cypBzu2Rrnnkr6g8k7jL7rpLjo/NJ7dE5feFc9Q/vnuGbgGxE5XXZ65ozF3O
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
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw93GVYFU8XAHC6uxu7C8WOOQIqKmJioxiIgah/Fbs7UBRFxe6AC5dGakcJ
FREQRBGV7u6O98acly8+COzdnd/M7NQ5fTfuWuIsJSEhcUhWQkL4r/jLgO7w
n/N4nZUvaRmy9vrHZn3qF8x7897al1QtjjA7V6lPj+1R2a83y5fkH9bxn5Ov
T/+UbpLZP9uX/Hq+e7rSL336RS9keeYcX/ItWfilT216unZMnOtL4pqFF9Sn
do9m2Nyf50uEV1scoU8vPy82l7TzJYKLCa4o+LwQg+NbF/iSF8LLPden8sMD
c7/b+xKfe8IvfXpbLsBm+iJfIrg5wQX1qVLNpBHvFvsS4dXMzunToClD9A2X
+pIjwts7rE89q47KXl7mS/YIL7dbn3YuTwrrcvAlW0Rf+rTlkMbwPSt8yVrR
BfVpkv+QwtKVvmSJ6Ab16agHk9c5rfYltqIH1qfmVtYPstf4EtHlpuvTqnYz
sxWOvmSc6Eufzt7euDFznS8ZKrqgPj1ada/SwcmXmItuUJ+SwZMnZm3wJaLb
09Gn4z9NP792ky8RXU5J8DyHdAwLN/sSsYc+3VZY6LZjC3ro0dfrzym0uKCH
HjWYefXl6W3ooUejL7TN0tyBHnp0Wt6EYc9c0UOPNjzM1hzvhh569NTORdOT
dqGHHq2yv+u3YQ966FGP27PMO/9DDz26YebK29770EOPhvu+vW7pjh56FI44
efw4gB569OXa8hT3Q+ihR0sW2iwzPoIeevStZI7jx6PooUcfG/zbvuM4eujR
PTP9o/ROooceTRgS6xl/Cj30aHPfJ2/3nUEPPfriN509+Bx66NGxz4MH/z2P
HnrU+/hBO6+L6KFHTxgcbba7jB56tGJ3bD/Fq+ihR0f9Sff65IEeevQh/+aX
i9fRQ5cW3xlgbXcDPXRpwPRm0PJCD13a+VQmLvsWeujSXXs4xVfe6KFLuSV2
t/be9SWi4vuoSyc+Plto7YMeutTiXWeY3gP00KVL+5gtrHqIHrq0admJHfGP
0UOX0qYrdo+foocuDem1bjj6HD106bAvU0wcX6KHLnV7N3c+vEYPXWo5707P
wLfooUv7OXi6q/mihy6d9NUyuN0PPXSp+ar6plJ/9NClw5es6szio4cu3Rjm
mpgchB661GXsXe+4EPTQpVMS/+yICUMPXTo+IUk2MgI9dKnk3+8v3keihy5t
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
5m6u7bHuOGYO4vKo5vh9vq207DYE8fNXcwYz+r2yWa0Ln0XPW8Xd/qG4td8D
TTgoer4qTs31ttMeW1X2PILvH4x7FnJHAX6K6lMlJ7HrlExCrgyI608lZxt/
y/ZZqSSMFdWXSk48behl9aOC6x6/6rlZv05yTVQfKjgJ05KvynWtzL+CW+++
0ExvXjOpEF2unFu0skDSWbuRjV/KuZaNQwZnj68nouKbU87lJQeUSMysJeLm
WcbxNS/+ar5SRUS397yMG9bpr9AzsYKILre4jJsg7F8sy0iv6KuUUxdU7437
SghPdMFSbqH7uOfm1UVkjcijlFu75uC6Yd6FRFHkUcp1XXli4bW1gISLPEq4
kn6x2sHr8tl4o4SrGdT2qnxvHqu/JZzlg7ETc21z2fismHvk1LvfLfsfq5/F
XNK5JM77zl8iupxZMZfedm7FzaN/WH9QxI0br5jjeT6biIrvcBG37FJQ+K3g
36y9F3Gez1L+Wkv9JmKPQm73vQxniz1ZrD0XcvZH5qVc6v5FxB6FXKHZfPPI
J7+YRwG3z8tAZrn9L+ZRwOWa+GeatfxkHgWcu7A9efxkHvncfP6kB+26P1l7
y+eSJv75e/dRJpktHtBxMyOklJotM1n/lsfFH9j480r+D+aRx506tq8i6fUP
5pHHRZSnHn9x8QfpEXnkcrpfR/LOn/1BVovKP5e77Xxxk+ODHyRMVEA53Ir+
Uelj038QLVH55nCzRj9f6TY0k+wSlec/znqa1uiFrzPJV1H5/eWW/1lQt2Dp
TzJYVF5/uavZ3cPoxF/kjKh8/nAxk+ozr23MIrmi28/mwqs0evnFv8lU0fNn
cxo3Ze3yfv5hz/ub4+9cvOWMXQ57vixuru2LnV1v81h/nMVtP6P9PWBnAetf
f3E+d+Jqps4uYv3lL+6qoPq8+VXM+r+fXIF86dJP70qIuL1mci2V9gceHSwh
JqL6kMmpuRwfL7+1mIjb4w/u2XH9sC2VheSH6HIZXH7Vz7GGbgXMN4PbGHXk
ZM3wfOaZzsX+id6zZFIe8/vOLTOyCE7tn8u8vnMyHvdsYpxyyDORTxo3bkxD
0CC9HNIl8kjlOn41JDVPyCEhovJP4SxCX6o1ROYQV1F5f+PmidYHc8kAUfkm
cypBzu2Rrnnkr6g8k7jL7rpLjo/NJ7dE5feFc9Q/vnuGbgGxE5XXZ65ozF3O
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
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw93GVYFU8XAHC6uxu7C8WOOQIqKmJioxiIgah/Fbs7UBRFxe6AC5dGakcJ
FREQRBGV7u6O98acly8+COzdnd/M7NQ5fTfuWuIsJSEhcUhWQkL4r/jLgO7w
n/N4nZUvaRmy9vrHZn3qF8x7897al1QtjjA7V6lPj+1R2a83y5fkH9bxn5Ov
T/+UbpLZP9uX/Hq+e7rSL336RS9keeYcX/ItWfilT216unZMnOtL4pqFF9Sn
do9m2Nyf50uEV1scoU8vPy82l7TzJYKLCa4o+LwQg+NbF/iSF8LLPden8sMD
c7/b+xKfe8IvfXpbLsBm+iJfIrg5wQX1qVLNpBHvFvsS4dXMzunToClD9A2X
+pIjwts7rE89q47KXl7mS/YIL7dbn3YuTwrrcvAlW0Rf+rTlkMbwPSt8yVrR
BfVpkv+QwtKVvmSJ6Ab16agHk9c5rfYltqIH1qfmVtYPstf4EtHlpuvTqnYz
sxWOvmSc6Eufzt7euDFznS8ZKrqgPj1ada/SwcmXmItuUJ+SwZMnZm3wJaLb
09Gn4z9NP792ky8RXU5J8DyHdAwLN/sSsYc+3VZY6LZjC3ro0dfrzym0uKCH
HjWYefXl6W3ooUejL7TN0tyBHnp0Wt6EYc9c0UOPNjzM1hzvhh569NTORdOT
dqGHHq2yv+u3YQ966FGP27PMO/9DDz26YebK29770EOPhvu+vW7pjh56FI44
efw4gB569OXa8hT3Q+ihR0sW2iwzPoIeevStZI7jx6PooUcfG/zbvuM4eujR
PTP9o/ROooceTRgS6xl/Cj30aHPfJ2/3nUEPPfriN509+Bx66NGxz4MH/z2P
HnrU+/hBO6+L6KFHTxgcbba7jB56tGJ3bD/Fq+ihR0f9Sff65IEeevQh/+aX
i9fRQ5cW3xlgbXcDPXRpwPRm0PJCD13a+VQmLvsWeujSXXs4xVfe6KFLuSV2
t/be9SWi4vuoSyc+Plto7YMeutTiXWeY3gP00KVL+5gtrHqIHrq0admJHfGP
0UOX0qYrdo+foocuDem1bjj6HD106bAvU0wcX6KHLnV7N3c+vEYPXWo5707P
wLfooUv7OXi6q/mihy6d9NUyuN0PPXSp+ar6plJ/9NClw5es6szio4cu3Rjm
mpgchB661GXsXe+4EPTQpVMS/+yICUMPXTo+IUk2MgI9dKnk3+8v3keihy5t
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
5m6u7bHuOGYO4vKo5vh9vq207DYE8fNXcwYz+r2yWa0Ln0XPW8Xd/qG4td8D
TTgoer4qTs31ttMeW1X2PILvH4x7FnJHAX6K6lMlJ7HrlExCrgyI608lZxt/
y/ZZqSSMFdWXSk48behl9aOC6x6/6rlZv05yTVQfKjgJ05KvynWtzL+CW+++
0ExvXjOpEF2unFu0skDSWbuRjV/KuZaNQwZnj68nouKbU87lJQeUSMysJeLm
WcbxNS/+ar5SRUS397yMG9bpr9AzsYKILre4jJsg7F8sy0iv6KuUUxdU7437
SghPdMFSbqH7uOfm1UVkjcijlFu75uC6Yd6FRFHkUcp1XXli4bW1gISLPEq4
kn6x2sHr8tl4o4SrGdT2qnxvHqu/JZzlg7ETc21z2fismHvk1LvfLfsfq5/F
XNK5JM77zl8iupxZMZfedm7FzaN/WH9QxI0br5jjeT6biIrvcBG37FJQ+K3g
36y9F3Gez1L+Wkv9JmKPQm73vQxniz1ZrD0XcvZH5qVc6v5FxB6FXKHZfPPI
J7+YRwG3z8tAZrn9L+ZRwOWa+GeatfxkHgWcu7A9efxkHvncfP6kB+26P1l7
y+eSJv75e/dRJpktHtBxMyOklJotM1n/lsfFH9j480r+D+aRx506tq8i6fUP
5pHHRZSnHn9x8QfpEXnkcrpfR/LOn/1BVovKP5e77Xxxk+ODHyRMVEA53Ir+
Uelj038QLVH55nCzRj9f6TY0k+wSlec/znqa1uiFrzPJV1H5/eWW/1lQt2Dp
TzJYVF5/uavZ3cPoxF/kjKh8/nAxk+ozr23MIrmi28/mwqs0evnFv8lU0fNn
cxo3Ze3yfv5hz/ub4+9cvOWMXQ57vixuru2LnV1v81h/nMVtP6P9PWBnAetf
f3E+d+Jqps4uYv3lL+6qoPq8+VXM+r+fXIF86dJP70qIuL1mci2V9gceHSwh
JqL6kMmpuRwfL7+1mIjb4w/u2XH9sC2VheSH6HIZXH7Vz7GGbgXMN4PbGHXk
ZM3wfOaZzsX+id6zZFIe8/vOLTOyCE7tn8u8vnMyHvdsYpxyyDORTxo3bkxD
0CC9HNIl8kjlOn41JDVPyCEhovJP4SxCX6o1ROYQV1F5f+PmidYHc8kAUfkm
cypBzu2Rrnnkr6g8k7jL7rpLjo/NJ7dE5feFc9Q/vnuGbgGxE5XXZ65ozF3O
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
         
         "]]}}}, {{}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
       GrayLevel[0], 16], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{-6, 8}, {0, 15.4199}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"\"N\"", ",", "\"W\"", ",", "\"S\""}], "}"}]}], "}"}], 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"\"E\"", ",", "\"N\"", ",", "\"W\"", ",", "\"S\""}], 
             "}"}]}], "}"}], 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", "\"E\"", "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"\"E\"", ",", "\"N\"", ",", "\"S\""}], "}"}]}], "}"}], 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", "\"N\"", "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"\"E\"", ",", "\"N\"", ",", "\"W\""}], "}"}]}], "}"}], 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", "\"W\"", "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"\"N\"", ",", "\"W\"", ",", "\"S\""}], "}"}]}], "}"}], 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", "\"S\"", "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"\"E\"", ",", "\"W\"", ",", "\"S\""}], "}"}]}], "}"}], 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"\"E\"", ",", "\"W\"", ",", "\"S\""}], "}"}]}], "}"}], 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"\"E\"", ",", "\"N\"", ",", "\"S\""}], "}"}]}], "}"}], 
       RowBox[{"{", 
         RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
             RowBox[{"\"E\"", ",", "\"N\"", ",", "\"W\""}], "}"}]}], "}"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm], ",", 
               TagBox[#7, HoldForm], ",", 
               TagBox[#8, HoldForm], ",", 
               TagBox[#9, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8371685828758965`*^9, 3.8371686564813137`*^9}, {
   3.8371689731168947`*^9, 3.8371689987482204`*^9}, 3.8371702617366295`*^9, {
   3.8377778553393745`*^9, 3.8377778792391963`*^9}, 3.837778209379054*^9, {
   3.837780265576505*^9, 3.8377802908461113`*^9}, 3.844662245736842*^9, {
   3.844662372040551*^9, 3.844662387667451*^9}},
 CellLabel->
  "Out[1336]=",ExpressionUUID->"a30b1333-ab14-4cb4-8947-b0be4723e6a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"gammaSet", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<E\>\"", ",", "\"\<N\>\"", ",", "\"\<W\>\"", ",", "\"\<S\>\""}], 
       "}"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"gammaSet", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\"\<E\>\"", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<E\>\"", ",", "\"\<N\>\"", ",", "\"\<S\>\""}], "}"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"gammaSet", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<E\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<E\>\"", ",", "\"\<N\>\"", ",", "\"\<S\>\""}], "}"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Im", "[", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"g1", " ", "g2", " ", "g3"}], ")"}]}], "]"}]}], "/", "Pi"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Emin", ",", "Emax"}], "}"}], ",", "Full"}], "}"}]}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Emin", ",", "Emax"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.837168703472419*^9, 3.837168734507515*^9}, {
  3.8371687764478292`*^9, 3.837168837204685*^9}, {3.8371688732883034`*^9, 
  3.8371689352490034`*^9}, {3.83716905453376*^9, 3.8371691002606735`*^9}, {
  3.8371691351596203`*^9, 3.8371692765023584`*^9}, {3.837778100429032*^9, 
  3.8377781821493444`*^9}},
 CellLabel->
  "In[1337]:=",ExpressionUUID->"e76a58d6-5718-496a-9b3e-f563ce2a3881"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    GrayLevel[0], 16],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-6, 8}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.837778134428927*^9, 3.8377781825441046`*^9}, {
   3.8377802657268515`*^9, 3.837780290971346*^9}, 3.8446622460233383`*^9, {
   3.8446623722808933`*^9, 3.8446623879225283`*^9}},
 CellLabel->
  "Out[1340]=",ExpressionUUID->"e252bcbb-d8a1-48b7-8cc6-6b821b99e792"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"gammaSet", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<E\>\"", ",", "\"\<N\>\"", ",", "\"\<W\>\"", ",", "\"\<S\>\""}], 
       "}"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"gammaSet", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\"\<E\>\"", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<E\>\"", ",", "\"\<N\>\"", ",", "\"\<S\>\""}], "}"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g3", "=", 
   RowBox[{"gammaSet", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<E\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<E\>\"", ",", "\"\<N\>\"", ",", "\"\<S\>\""}], "}"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Im", "[", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"g1", " ", "g2", " ", "g3"}], ")"}]}], "]"}]}], "/", "Pi"}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Emin", ",", "Emax"}], "}"}], ",", "Full"}], "}"}]}], ",", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Emin", ",", "Emax"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Axes", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "16"}], "]"}]}]}], "]"}]}], "Input",
 CellLabel->
  "In[1341]:=",ExpressionUUID->"c66cd2b9-83eb-47fe-9444-eb36a9ae89c6"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    GrayLevel[0], 16],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-6, 8}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8377802657766256`*^9, 3.8377802910261784`*^9}, 
   3.844662246131382*^9, {3.844662372515431*^9, 3.844662388159446*^9}},
 CellLabel->
  "Out[1344]=",ExpressionUUID->"fd238bac-8a43-4dff-a3d6-207ab4bc4b83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pos", "=", 
  RowBox[{
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"GFList", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<E\>\"", ",", "\"\<E\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<E\>\"", ",", "\"\<W\>\""}], "}"}]}], "}"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"refGFList", "[", 
  RowBox[{"[", "pos", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"GFPatternList", "[", 
  RowBox[{"[", "pos", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.837778438988805*^9, 3.8377785491285295`*^9}, {
  3.8377798347320333`*^9, 3.837779902396888*^9}, {3.837779934546818*^9, 
  3.8377799673670244`*^9}, {3.8377800334070864`*^9, 3.8377801077015247`*^9}, {
  3.837780190156798*^9, 3.837780248206846*^9}},
 CellLabel->
  "In[1345]:=",ExpressionUUID->"5a583f6b-1bc4-4750-be52-a44e39f47e6c"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 1345, 32, 29903395908847041087, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8446623725315113`*^9, 3.844662388177969*^9}},
 CellLabel->
  "During evaluation of \
In[1345]:=",ExpressionUUID->"d52e7f1c-9e12-4218-af8f-0bfa35e2468a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "}"}], "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{{3.837778440408906*^9, 3.8377785496035357`*^9}, 
   3.8377798574969034`*^9, 3.8377799027471128`*^9, {3.8377799500821257`*^9, 
   3.83777996780688*^9}, {3.8377800418615646`*^9, 3.837780108181684*^9}, {
   3.8377801830464783`*^9, 3.8377802910361333`*^9}, 3.8446622461493397`*^9, {
   3.844662372540203*^9, 3.84466238818607*^9}},
 CellLabel->
  "Out[1345]=",ExpressionUUID->"3e36d66c-5293-4c4c-86cd-4ef9e326484b"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) cannot be used as a part specification.\"", 2, 
   1346, 33, 29903395908847041087, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8446623725315113`*^9, 3.844662388188117*^9}},
 CellLabel->
  "During evaluation of \
In[1345]:=",ExpressionUUID->"f1dfdc01-9b51-467b-b771-f790263eb913"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"E\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"E\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"E\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"N\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"E\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"W\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"E\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"S\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"N\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"E\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"N\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"N\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"N\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"W\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"N\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"S\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"W\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"E\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"W\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"N\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"W\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"W\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"W\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"S\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"S\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"E\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"S\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"N\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"S\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"W\"\>", "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"S\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"S\"\>", "}"}]}], "}"}]}], "}"}], 
  "\[LeftDoubleBracket]", 
  RowBox[{
   RowBox[{"{", "}"}], "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
  "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{{3.837778440408906*^9, 3.8377785496035357`*^9}, 
   3.8377798574969034`*^9, 3.8377799027471128`*^9, {3.8377799500821257`*^9, 
   3.83777996780688*^9}, {3.8377800418615646`*^9, 3.837780108181684*^9}, {
   3.8377801830464783`*^9, 3.8377802910361333`*^9}, 3.8446622461493397`*^9, {
   3.844662372540203*^9, 3.844662388196357*^9}},
 CellLabel->
  "Out[1346]=",ExpressionUUID->"bb942895-aa04-47e7-9bf5-bc28bc108a1a"],

Cell[BoxData[
 TemplateBox[{
  "Part", "pkspec1", 
   "\"The expression \\!\\(\\*RowBox[{RowBox[{\\\"{\\\", \\\"}\\\"}], \\\"\
\[LeftDoubleBracket]\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"1\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]\\) cannot be used as a part specification.\"", 2, 
   1347, 34, 29903395908847041087, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8446623725315113`*^9, 3.844662388199153*^9}},
 CellLabel->
  "During evaluation of \
In[1345]:=",ExpressionUUID->"ef221429-1832-439a-be94-a1bd197d44bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"N\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], "}"}]}],
          "}"}], "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"E\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1.`"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"N\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"E\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1.`"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"W\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"N\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"E\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1.`"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"S\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"E\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1.`"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"E\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"N\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"E\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], "}"}]}],
          "}"}], "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"N\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1.`"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"W\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"N\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"N\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1.`"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"S\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"N\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1.`"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"E\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"W\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"N\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1.`"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"N\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"W\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"N\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"S\"\>"}], "}"}]}],
          "}"}], "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"W\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"N\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1.`"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"S\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"W\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"N\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1.`"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"E\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"S\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1.`"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"N\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"S\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1.`"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"W\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"N\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"S\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}], ",", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"single", "\[Rule]", "1"}], ",", 
      RowBox[{"double", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>"}], "}"}]}],
          "}"}], "}"}]}], ",", 
      RowBox[{"denom", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\"E\"\>", ",", "\<\"N\"\>", ",", "\<\"W\"\>", 
             ",", "\<\"S\"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "\<\"S\"\>", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"E\"\>", ",", "\<\"W\"\>", ",", "\<\"S\"\>"}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], "}"}], 
  "\[LeftDoubleBracket]", 
  RowBox[{
   RowBox[{"{", "}"}], "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
  "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{{3.837778440408906*^9, 3.8377785496035357`*^9}, 
   3.8377798574969034`*^9, 3.8377799027471128`*^9, {3.8377799500821257`*^9, 
   3.83777996780688*^9}, {3.8377800418615646`*^9, 3.837780108181684*^9}, {
   3.8377801830464783`*^9, 3.8377802910361333`*^9}, 3.8446622461493397`*^9, {
   3.844662372540203*^9, 3.8446623882093973`*^9}},
 CellLabel->
  "Out[1347]=",ExpressionUUID->"c60e0edc-0bb3-4d9a-a537-7bcc35cab65d"]
}, Open  ]]
},
WindowSize->{1440, 847},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"297eae74-2f6e-47a0-ae7f-ce03a963fee2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 681, 17, 94, "Input",ExpressionUUID->"2f91cedf-8e71-4d4e-ba1d-4f5bebc61316"],
Cell[1264, 41, 329, 5, 34, "Output",ExpressionUUID->"7cd9fdb0-b59c-4b48-b1c5-ed429878147a"]
}, Open  ]],
Cell[1608, 49, 873, 21, 136, "Input",ExpressionUUID->"b152ee00-f402-45f9-a1d5-419d908ed7a6"],
Cell[2484, 72, 5966, 160, 682, "Input",ExpressionUUID->"e5ca9cf7-0ff3-4a7c-891c-c67e21407c57"],
Cell[8453, 234, 10780, 248, 1144, "Input",ExpressionUUID->"c91e837b-bfae-46d0-b045-28257a161700"],
Cell[19236, 484, 17005, 374, 1375, "Input",ExpressionUUID->"9cdbf845-cf42-4e4c-97e4-37c3515e6906"],
Cell[36244, 860, 6326, 138, 682, "Input",ExpressionUUID->"d5ab117f-d7c6-42dd-a1eb-aca0ef349fde"],
Cell[42573, 1000, 15849, 358, 1543, "Input",ExpressionUUID->"9545e2e3-0663-4e0d-895e-7a375fbc9cc6"],
Cell[58425, 1360, 13556, 295, 1102, "Input",ExpressionUUID->"f1118280-2a18-4951-8cc2-5ad89f91079d"],
Cell[CellGroupData[{
Cell[72006, 1659, 2254, 41, 136, "Input",ExpressionUUID->"a6d19c87-6c0f-4a37-9163-a18fd37824cd"],
Cell[74263, 1702, 1854, 31, 34, "Output",ExpressionUUID->"53aec485-dfcc-41b5-a2a8-32d00b9139a0"]
}, Open  ]],
Cell[76132, 1736, 1008, 21, 52, "Input",ExpressionUUID->"05ca4db3-45b8-4d9a-92d7-a4f7eef4d58e"],
Cell[77143, 1759, 831, 20, 94, "Input",ExpressionUUID->"0c3a5360-cd47-41d9-a48f-a0f309af2590"],
Cell[CellGroupData[{
Cell[77999, 1783, 1894, 38, 52, "Input",ExpressionUUID->"ac6a61f3-1f30-47ec-bc5f-a50bb6454c89"],
Cell[79896, 1823, 83977, 1399, 377, "Output",ExpressionUUID->"744547d0-cadf-4dba-8daf-f67d92882474"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163910, 3227, 905, 23, 52, "Input",ExpressionUUID->"6f6b2c07-6f0a-4d11-bcfe-acbded2ad489"],
Cell[164818, 3252, 222651, 3859, 384, "Output",ExpressionUUID->"a30b1333-ab14-4cb4-8947-b0be4723e6a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387506, 7116, 2163, 61, 115, "Input",ExpressionUUID->"e76a58d6-5718-496a-9b3e-f563ce2a3881"],
Cell[389672, 7179, 1298, 37, 377, "Output",ExpressionUUID->"e252bcbb-d8a1-48b7-8cc6-6b821b99e792"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391007, 7221, 1842, 56, 115, "Input",ExpressionUUID->"c66cd2b9-83eb-47fe-9444-eb36a9ae89c6"],
Cell[392852, 7279, 1242, 36, 377, "Output",ExpressionUUID->"fd238bac-8a43-4dff-a3d6-207ab4bc4b83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394131, 7320, 992, 24, 73, "Input",ExpressionUUID->"5a583f6b-1bc4-4750-be52-a44e39f47e6c"],
Cell[395126, 7346, 420, 9, 28, "Message",ExpressionUUID->"d52e7f1c-9e12-4218-af8f-0bfa35e2468a"],
Cell[395549, 7357, 565, 10, 34, "Output",ExpressionUUID->"3e36d66c-5293-4c4c-86cd-4ef9e326484b"],
Cell[396117, 7369, 541, 11, 28, "Message",ExpressionUUID->"f1dfdc01-9b51-467b-b771-f790263eb913"],
Cell[396661, 7382, 2764, 79, 56, "Output",ExpressionUUID->"bb942895-aa04-47e7-9bf5-bc28bc108a1a"],
Cell[399428, 7463, 541, 11, 28, "Message",ExpressionUUID->"ef221429-1832-439a-be94-a1bd197d44bb"],
Cell[399972, 7476, 16062, 447, 405, "Output",ExpressionUUID->"c60e0edc-0bb3-4d9a-a537-7bcc35cab65d"]
}, Open  ]]
}
]
*)

